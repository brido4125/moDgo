[{"C:\\Users\\USER\\moDgo\\front\\src\\index.jsx":"1","C:\\Users\\USER\\moDgo\\front\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\moDgo\\front\\src\\App.jsx":"3","C:\\Users\\USER\\moDgo\\front\\src\\pages\\Board.jsx":"4","C:\\Users\\USER\\moDgo\\front\\src\\GlobalStyles.jsx":"5","C:\\Users\\USER\\moDgo\\front\\src\\pages\\Home.jsx":"6","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\ScrollToTop.jsx":"7","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\Footer.js":"8","C:\\Users\\USER\\moDgo\\front\\src\\components\\board\\Main.jsx":"9","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\navBar\\NavBar.jsx":"10","C:\\Users\\USER\\moDgo\\front\\src\\components\\home\\Main.jsx":"11","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\navBar\\login\\Login.jsx":"12","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\Button.jsx":"13","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\Spin.jsx":"14","C:\\Users\\USER\\moDgo\\front\\src\\components\\board\\SearchBar.jsx":"15","C:\\Users\\USER\\moDgo\\front\\src\\components\\board\\ClubCard.jsx":"16","C:\\Users\\USER\\moDgo\\front\\src\\components\\board\\TagFilter.jsx":"17","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\Pagination.jsx":"18","C:\\Users\\USER\\moDgo\\front\\src\\components\\home\\ImageSlider.js":"19","C:\\Users\\USER\\moDgo\\front\\src\\components\\home\\MainClubCard.js":"20","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\ExpiredTag.jsx":"21","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\SmallTag.jsx":"22","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\Tag.jsx":"23","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\navBar\\register\\RegisterForm.jsx":"24","C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\Main.jsx":"25","C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\EditForm.jsx":"26","C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\LikedClubCard.jsx":"27","C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\Member.jsx":"28","C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\JoinedClubCard.jsx":"29","C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\PendingMember.jsx":"30","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\NotFound.jsx":"31","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\WaitingTag.jsx":"32","C:\\Users\\USER\\moDgo\\front\\src\\pages\\Detail.jsx":"33","C:\\Users\\USER\\moDgo\\front\\src\\pages\\MyPage.jsx":"34","C:\\Users\\USER\\moDgo\\front\\src\\components\\detail\\Main.jsx":"35","C:\\Users\\USER\\moDgo\\front\\src\\components\\detail\\DetailInfo.jsx":"36","C:\\Users\\USER\\moDgo\\front\\src\\components\\detail\\InfoBox.jsx":"37","C:\\Users\\USER\\moDgo\\front\\src\\components\\detail\\Comment.jsx":"38"},{"size":534,"mtime":1637240925410,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1636037258176,"results":"41","hashOfConfig":"40"},{"size":799,"mtime":1637595389262,"results":"42","hashOfConfig":"40"},{"size":324,"mtime":1636980842394,"results":"43","hashOfConfig":"40"},{"size":530,"mtime":1636384580654,"results":"44","hashOfConfig":"40"},{"size":398,"mtime":1637589969207,"results":"45","hashOfConfig":"40"},{"size":290,"mtime":1636384580656,"results":"46","hashOfConfig":"40"},{"size":1719,"mtime":1636980842357,"results":"47","hashOfConfig":"40"},{"size":8776,"mtime":1637589296856,"results":"48","hashOfConfig":"40"},{"size":8011,"mtime":1637589623081,"results":"49","hashOfConfig":"40"},{"size":6340,"mtime":1637592679610,"results":"50","hashOfConfig":"40"},{"size":2633,"mtime":1637595888271,"results":"51","hashOfConfig":"40"},{"size":469,"mtime":1636980842352,"results":"52","hashOfConfig":"40"},{"size":348,"mtime":1636980845511,"results":"53","hashOfConfig":"40"},{"size":1952,"mtime":1636980842346,"results":"54","hashOfConfig":"40"},{"size":6706,"mtime":1637595520406,"results":"55","hashOfConfig":"40"},{"size":2076,"mtime":1637314375319,"results":"56","hashOfConfig":"40"},{"size":1326,"mtime":1636980842360,"results":"57","hashOfConfig":"40"},{"size":2545,"mtime":1636980842380,"results":"58","hashOfConfig":"40"},{"size":6603,"mtime":1637590519671,"results":"59","hashOfConfig":"40"},{"size":396,"mtime":1636980842354,"results":"60","hashOfConfig":"40"},{"size":492,"mtime":1636384580657,"results":"61","hashOfConfig":"40"},{"size":1030,"mtime":1636980842366,"results":"62","hashOfConfig":"40"},{"size":19151,"mtime":1637596694734,"results":"63","hashOfConfig":"40"},{"size":22195,"mtime":1637596221091,"results":"64","hashOfConfig":"40"},{"size":21159,"mtime":1637596763934,"results":"65","hashOfConfig":"40"},{"size":6890,"mtime":1637596093469,"results":"66","hashOfConfig":"40"},{"size":3779,"mtime":1637240925238,"results":"67","hashOfConfig":"40"},{"size":7978,"mtime":1637595388950,"results":"68","hashOfConfig":"40"},{"size":4146,"mtime":1637240925239,"results":"69","hashOfConfig":"40"},{"size":844,"mtime":1637240925228,"results":"70","hashOfConfig":"40"},{"size":396,"mtime":1637240925431,"results":"71","hashOfConfig":"40"},{"size":343,"mtime":1637595388956,"results":"72","hashOfConfig":"40"},{"size":357,"mtime":1637595389140,"results":"73","hashOfConfig":"40"},{"size":11161,"mtime":1637596365424,"results":"74","hashOfConfig":"40"},{"size":2967,"mtime":1637595978644,"results":"75","hashOfConfig":"40"},{"size":11835,"mtime":1637596022198,"results":"76","hashOfConfig":"40"},{"size":7916,"mtime":1637595388948,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"88k8jp",{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\moDgo\\front\\src\\index.jsx",[],["164","165"],"C:\\Users\\USER\\moDgo\\front\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\moDgo\\front\\src\\App.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\pages\\Board.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\GlobalStyles.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\pages\\Home.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\ScrollToTop.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\Footer.js",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\board\\Main.jsx",["166"],"import React, { useState, useEffect } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Checkbox, Select, message } from \"antd\";\r\nimport { customMedia } from \"../../GlobalStyles\";\r\n\r\nimport TagFilter from \"./TagFilter\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport ClubCard from \"./ClubCard\";\r\nimport Pagination from \"../common/Pagination\";\r\nimport Spin from \"../common/Spin\";\r\n\r\nconst url = \"http://modgo.loca.lt\";\r\n\r\nconst Main = () => {\r\n  const [clubs, setClubs] = useState();\r\n  const [sortBy, setSortBy] = useState(\"createdAt\");\r\n  const [clubStatus, setClubStatus] = useState(\"\");\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [likedClubs, setLikedClubs] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  const userId = localStorage.getItem(\"user_id\");\r\n\r\n  // const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    setLoading(false);\r\n  }, [clubStatus, page, keyword, selectedTags, sortBy, userId]);\r\n\r\n  const fetchData = async () => {\r\n    const sendTags = selectedTags.join(\", \");\r\n\r\n    try {\r\n      const res = await axios.get(url+ \"/clubs\", {\r\n        params: {\r\n          sortBy: sortBy,\r\n          tags: sendTags,\r\n          clubStatus: clubStatus,\r\n          keyword: keyword,\r\n          page: page,\r\n        },\r\n      });\r\n\r\n      setClubs(res.data.clubList);\r\n      setTotal(res.data.totalCount);\r\n\r\n      if (userId) {\r\n        const likedClubRes = await axios.get(url+\"/likedClubs/ids\", {\r\n          params: {\r\n            userId: userId,\r\n          },\r\n        });\r\n        setLikedClubs(likedClubRes.data.likedClubIdList);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleLikedClubs = (clubId) => {\r\n    let index = likedClubs.indexOf(clubId);\r\n\r\n    try {\r\n      if (likedClubs.includes(clubId)) {\r\n        likedClubs.splice(index, 1);\r\n        setLikedClubs([...likedClubs]);\r\n        handleLikeDelete(clubId);\r\n      } else {\r\n        setLikedClubs([...likedClubs, clubId]);\r\n        handleLikePost(clubId);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const handleLikePost = async (clubId) => {\r\n    try {\r\n      await axios.post(url+\"/likedClubs\", {\r\n        clubId: Number(clubId),\r\n        userId: userId,\r\n      });\r\n    } catch (err) {\r\n      message.error(\"이미 좋아요한 모임입니다.\");\r\n    }\r\n  };\r\n\r\n  const handleLikeDelete = async (clubId) => {\r\n    try {\r\n      axios.delete(url+\"/likedClubs\", {\r\n        params: { userId: userId, clubId: Number(clubId) },\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {loading ? (\r\n        <SpinContainer>\r\n          <Spin />\r\n        </SpinContainer>\r\n      ) : (\r\n        <>\r\n          <MainTitle onClick={() => document.location.reload()}>\r\n            모임 찾기\r\n          </MainTitle>\r\n          <SearchBar keyword={keyword} setKeyword={setKeyword} />\r\n          <TagFilter\r\n            selectedTags={selectedTags}\r\n            setSelectedTags={setSelectedTags}\r\n          />\r\n          <TitleRow>\r\n            <Title>{total}개의 모임</Title>\r\n            <CheckboxFilter\r\n              onChange={(e) => {\r\n                setClubStatus(e.target.checked ? \"ACTIVE\" : \"\");\r\n              }}\r\n            >\r\n              모집중\r\n            </CheckboxFilter>\r\n            <SortFilter\r\n              showSearch\r\n              placeholder=\"정렬필터\"\r\n              onChange={(value) => setSortBy(value)}\r\n            >\r\n              <Option value=\"createdAt\">최신순</Option>\r\n              <Option value=\"likes\">좋아요순</Option>\r\n            </SortFilter>\r\n          </TitleRow>\r\n          <CardRow>\r\n            {clubs != null\r\n              ? clubs.map((club) => (\r\n                  <ClubCard\r\n                    key={club.id}\r\n                    userId={userId}\r\n                    club={club}\r\n                    likedClubs={likedClubs}\r\n                    handleLikedClubs={handleLikedClubs}\r\n                  />\r\n                ))\r\n              : \"\"}\r\n          </CardRow>\r\n          <PaginationRow>\r\n            <Pagination\r\n              total={total}\r\n              pageSize={9}\r\n              current={page}\r\n              onChange={(page) => setPage(page)}\r\n            />\r\n          </PaginationRow>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst { Option } = Select;\r\n\r\nconst Wrapper = styled.section`\r\n  width: 1200px;\r\n  margin: 90px auto;\r\n  padding-bottom: 60px;\r\n  flex: 1;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    width: 295px;\r\n    margin: 40px auto;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 363px;\r\n    margin: 40px auto;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 610px;\r\n    margin: 60px auto;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 880px;\r\n  `}\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n  font-size: 26px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 18px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 18px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 20px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 22px;\r\n  `}\r\n`;\r\n\r\nconst TitleRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 50px 0;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n  flex: 5;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 16px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 16px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 18px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 20px;\r\n  `}\r\n`;\r\n\r\nconst CheckboxFilter = styled(Checkbox)`\r\n  font-size: 18px;\r\n  flex: 0.7;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 12px;\r\n    flex: 2;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 12px;\r\n    flex: 2;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n    flex: 1;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 16px;\r\n  `}\r\n\t.ant-checkbox-inner {\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      width: 12px;\r\n      height: 12px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      width: 12px;\r\n      height: 12px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      width: 14px;\r\n      height: 14px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      width: 16px;\r\n      height: 16px;\r\n    `}\r\n  }\r\n  .ant-checkbox-checked .ant-checkbox-inner {\r\n    background-color: #029400;\r\n    border-color: #029400;\r\n  }\r\n  .ant-checkbox-checked::after {\r\n    border-color: #029400;\r\n  }\r\n  .ant-checkbox-wrapper:hover .ant-checkbox-inner,\r\n  .ant-checkbox:hover .ant-checkbox-inner,\r\n  .ant-checkbox-input:focus + .ant-checkbox-inner {\r\n    border-color: #029400;\r\n  }\r\n`;\r\n\r\nconst SortFilter = styled(Select)`\r\n  flex: 0.7;\r\n  .ant-select-selection-item,\r\n  .ant-select-selection-placeholder {\r\n    font-size: 16px;\r\n    ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 12px;\r\n  `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 12px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n  `}\r\n  }\r\n  &:not(.ant-select-disabled):hover .ant-select-selector {\r\n    border-color: #029400;\r\n  }\r\n`;\r\n\r\nconst CardRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 60px;\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    gap: 40px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    gap: 20px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    gap: 20px;\r\n  `}\r\n`;\r\n\r\nconst PaginationRow = styled(Row)`\r\n  width: 100%;\r\n  margin-top: 90px;\r\n  justify-content: center;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    margin-top: 45px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    margin-top: 45px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    margin-top: 45px;\r\n  `}\r\n`;\r\n\r\nconst SpinContainer = styled.div`\r\n  width: 100%;\r\n  height: 80vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    height: 40vh;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    margin-top: 40vh;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    height: 40vh;\r\n  `}\r\n`;\r\n","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\navBar\\NavBar.jsx",["167"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal , Menu } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { customMedia } from '../../../GlobalStyles';\r\n\r\n\r\n\r\nimport Login from \"./login/Login.jsx\";\r\nimport RegisterForm from \"./register/RegisterForm.jsx\";\r\n//import logo from \"../../../images/icons/logo.png\";\r\nimport profile from \"../../../images/icons/profile.png\";\r\n//import add from \"../../../images/icons/add.png\";\r\n\r\n\r\nconst NavBar = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [userImage, setUserImage] = useState(null);\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n  const userId = localStorage.getItem('user_id');\r\n  const userImg = localStorage.getItem('user_image');\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      setLoggedIn(true);\r\n      setUserImage(userImg);\r\n    }\r\n  }, [userId, userImg]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('user_id');\r\n    localStorage.removeItem('user_image');\r\n    setLoggedIn(false);\r\n    setUserImage(null);\r\n    window.location.reload();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {!isLoggedIn ? (\r\n        <Nav>\r\n          <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n            <NavLogo>\r\n              <LogoTitle>moDgo</LogoTitle>\r\n            </NavLogo>\r\n          </Link>\r\n          <NavMenu>\r\n            <NavLink to=\"/board\" style={{ textDecoration: 'none' }}>\r\n              <NavText>모임 찾기</NavText>\r\n            </NavLink>\r\n            <NavIcon>\r\n              <NavProfile onClick={showModal}>\r\n                <img src={profile} alt=\"Profile icon\" />\r\n              </NavProfile>\r\n              <StyledModal visible={isModalVisible} onCancel={handleCancel}>\r\n                <Title>\r\n                  지금 바로,\r\n                  <br />\r\n                  <strong>moDgo</strong>에서 모여보세요!\r\n                </Title>\r\n                <Login onCancel={handleCancel} setLoggedIn={setLoggedIn} />\r\n              </StyledModal>\r\n            </NavIcon>\r\n          </NavMenu>\r\n        </Nav>\r\n      ) : (\r\n        <Nav>\r\n          <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n            <NavLogo>\r\n              <LogoTitle>moDgo</LogoTitle>\r\n            </NavLogo>\r\n          </Link>\r\n          <NavMenu>\r\n            <NavLink to=\"/board\" style={{ textDecoration: 'none' }}>\r\n              <NavText>모임 찾기</NavText>\r\n            </NavLink>\r\n\r\n            <NavRegister onClick={showModal}>\r\n              <NavText>모임 생성</NavText>\r\n            </NavRegister>\r\n            <StyledModal visible={isModalVisible} onCancel={handleCancel}>\r\n              <RegisterForm onCancel={handleCancel} />\r\n            </StyledModal>\r\n\r\n\r\n            <NavLink to=\"/myPage\" style={{ textDecoration: \"none\" }}>\r\n              <NavText>마이페이지</NavText>\r\n            </NavLink>\r\n            <NavLink onClick={handleLogout} style={{ textDecoration: \"none\" }}>\r\n\r\n              <NavText>로그아웃</NavText>\r\n            </NavLink>\r\n            <NavIcon>\r\n              <NavProfile>\r\n                <img src={userImage} alt=\"User profile\" />\r\n              </NavProfile>\r\n            </NavIcon>\r\n          </NavMenu>\r\n        </Nav>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\nconst Nav = styled.nav`\r\n  width: 1200px;\r\n  height: 80px;\r\n  margin: 40px auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  ${customMedia.lessThan('mobile')`\r\n    width: 295px;\r\n  `}\r\n  ${customMedia.between('mobile', 'largeMobile')`\r\n    width: 363px;\r\n  `}\r\n\t${customMedia.between('largeMobile', 'tablet')`\r\n    width: 610px;\r\n  `}\r\n\t${customMedia.between('tablet', 'desktop')`\r\n    width: 880px;\r\n  `}\r\n`;\r\n\r\nconst NavLogo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\n// const LogoIcon = styled.div`\r\n//   width: 26px;\r\n//   height: 26px;\r\n//   img {\r\n//     width: 100%;\r\n//   }\r\n//   ${customMedia.lessThan('mobile')`\r\n//     width: 20px;\r\n//     height: 20px;\r\n//   `}\r\n//   ${customMedia.between('mobile', 'largeMobile')`\r\n//     width: 22px;\r\n//     height: 22px;\r\n//   `}\r\n// \t${customMedia.between('largeMobile', 'tablet')`\r\n//     width: 24px;\r\n//     height: 24px;\r\n//   `}\r\n// `;\r\n\r\nconst LogoTitle = styled.div`\r\n  font-weight: bold;\r\n  font-size: 50px;\r\n  color: #000000;\r\n  ${customMedia.lessThan('mobile')`\r\n    font-size: 20px;\r\n  `}\r\n  ${customMedia.between('mobile', 'largeMobile')`\r\n    font-size: 20px;\r\n  `}\r\n\t${customMedia.between('largeMobile', 'tablet')`\r\n    font-size: 24px;\r\n  `}\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 50px;\r\n  ${customMedia.lessThan('mobile')`\r\n    gap: 20px;\r\n  `}\r\n  ${customMedia.between('mobile', 'largeMobile')`\r\n    gap: 30px;\r\n  `}\r\n\t${customMedia.between('largeMobile', 'tablet')`\r\n    gap: 40px;\r\n  `}\r\n`;\r\n\r\nconst NavLink = styled(Link)`\r\n  color: black;\r\n  &:hover {\r\n    color: #029400;\r\n  }\r\n`;\r\n\r\nconst NavText = styled.div`\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  ${customMedia.lessThan('mobile')`\r\n    font-size: 14px;\r\n  `}\r\n  ${customMedia.between('mobile', 'largeMobile')`\r\n    font-size: 14px;\r\n  `}\r\n\t${customMedia.between('largeMobile', 'tablet')`\r\n    font-size: 16px;\r\n  `}\r\n`;\r\n\r\nconst NavIcon = styled.div`\r\n  display: flex;\r\n  gap: 30px;\r\n  ${customMedia.lessThan('mobile')`\r\n    gap: 10px;\r\n  `}\r\n  ${customMedia.between('mobile', 'largeMobile')`\r\n    gap: 15px;\r\n  `}\r\n\t${customMedia.between('largeMobile', 'tablet')`\r\n    gap: 20px;;\r\n  `}\r\n`;\r\n\r\nconst NavProfile = styled.div`\r\n  width: 48px;\r\n  height: 48px;\r\n  cursor: pointer;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  ${customMedia.lessThan('mobile')`\r\n    width: 28px;\r\n    height: 28px;\r\n  `}\r\n  ${customMedia.between('mobile', 'largeMobile')`\r\n    width: 30px;\r\n    height: 30px;\r\n  `}\r\n\t${customMedia.between('largeMobile', 'tablet')`\r\n    width: 32px;\r\n    height: 32px;\r\n  `}\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 26px;\r\n  white-space: pre-wrap;\r\n  ${customMedia.lessThan('mobile')`\r\n    font-size: 18px;\r\n  `}\r\n  ${customMedia.between('mobile', 'largeMobile')`\r\n    font-size: 20px;\r\n  `}\r\n\t${customMedia.between('largeMobile', 'tablet')`\r\n    font-size: 22px;\r\n  `}\r\n`;\r\n\r\nconst NavRegister = styled.div`\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #029400;\r\n  }\r\n`;\r\n\r\n// const StyledDropdownMenu = styled(Menu)`\r\n//   .ant-dropdown-menu-item,\r\n//   .ant-dropdown-menu-submenu-title {\r\n//     font-size: 16px;\r\n//     padding: 10px 20px;\r\n//     text-align: center;\r\n//     ${customMedia.lessThan('mobile')`\r\n//       font-size: 12px;\r\n//       padding: 5px 10px;\r\n//     `}\r\n//     ${customMedia.between('mobile', 'largeMobile')`\r\n//       font-size: 12px;\r\n//       padding: 5px 10px;\r\n//     `}\r\n// \t\t${customMedia.between('largeMobile', 'tablet')`\r\n//       font-size: 14px;\r\n//       padding: 8px 13px;\r\n//     `}\r\n//   }\r\n// `;\r\n\r\nconst StyledModal = styled(Modal)`\r\n  display: flex;\r\n  justify-content: center;\r\n  .ant-modal-content {\r\n    padding: 30px 55px;\r\n    display: flex;\r\n    align-items: center;\r\n    ${customMedia.lessThan('mobile')`\r\n      padding: 10px;\r\n    `}\r\n    ${customMedia.between('mobile', 'largeMobile')`\r\n      padding: 10px 15px;\r\n    `}\r\n    ${customMedia.between('largeMobile', 'tablet')`\r\n      padding: 20px 35px;\r\n    `}\r\n  }\r\n  .ant-modal-body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 48px;\r\n    ${customMedia.lessThan('mobile')`\r\n      gap: 24px;\r\n      padding: 15px;\r\n    `}\r\n    ${customMedia.between('mobile', 'largeMobile')`\r\n      gap: 26px;\r\n    `}\r\n    ${customMedia.between('largeMobile', 'tablet')`\r\n      gap: 32px;\r\n    `}\r\n  }\r\n  .ant-modal-footer {\r\n    display: none;\r\n  }\r\n`;\r\n","C:\\Users\\USER\\moDgo\\front\\src\\components\\home\\Main.jsx",["168"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { customMedia } from \"../../GlobalStyles\";\r\n\r\nimport ImageSlider from \"./ImageSlider\";\r\nimport MainClubCard from \"./MainClubCard\";\r\nimport Button from \"../common/Button.jsx\";\r\nimport Spin from \"../common/Spin.jsx\";\r\n\r\nconst url = \"http://modgo.loca.lt\";\r\n\r\nconst Main = () => {\r\n  const [sortByCreatedAtClubs, setSortByCreatedAtClubs] = useState([]);\r\n  const [sortByLikesClubs, setsortByLikesClubs] = useState([]);\r\n  const [likedClubs, setLikedClubs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const userId = localStorage.getItem(\"user_id\");\r\n\r\n  useEffect(() => {\r\n    // fetchData();\r\n    setLoading(false);\r\n  }, [userId]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const createdAtRes = await axios.get(url+\"/clubs\", { //신규모임\r\n        params: {\r\n          sortBy: \"createdAt\",\r\n          tags: \"\",\r\n          clubStatus: \"ACTIVE\",\r\n          keyword: \"\",\r\n          page: 1,\r\n        },\r\n      });\r\n      setSortByCreatedAtClubs(createdAtRes.data.clubList);\r\n\r\n      // const Allclubs = await axios.get(url+\"/clubs\",{\r\n      //   params: {\r\n      //     sortBy: \"\",\r\n      //     tags: \"\",\r\n      //     clubStatus: \"\",\r\n      //     keyword:\"\",\r\n      //     page: 1,\r\n      //   },\r\n      // });\r\n      // setSortByCreatedAtClubs(Allclubs.data.clubList)\r\n\r\n      const likesRes = await axios.get(url+\"/clubs\", { //인기있는 모임\r\n        params: {\r\n          sortBy: \"likes\",\r\n          tags: \"\",\r\n          clubStatus: \"ACTIVE\",\r\n          keyword: \"\",\r\n          page: 1,\r\n        },\r\n      });\r\n      setsortByLikesClubs(likesRes.data.clubList);\r\n\r\n      if (userId) {\r\n        const likedClubRes = await axios.get(url+\"/likedClubs/ids\", {\r\n          params: {\r\n            userId: userId,\r\n          },\r\n        });\r\n        setLikedClubs(likedClubRes.data.likedClubIdList);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleLikedClubs = (clubId) => {\r\n    let index = likedClubs.indexOf(clubId);\r\n\r\n    try {\r\n      if (likedClubs.includes(clubId)) {\r\n        likedClubs.splice(index, 1);\r\n        setLikedClubs([...likedClubs]);\r\n        handleLikeDelete(clubId);\r\n      } else {\r\n        setLikedClubs([...likedClubs, clubId]);\r\n        handleLikePost(clubId);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const handleLikePost = async (clubId) => {\r\n    try {\r\n      await axios.post(url+\"/likedClubs\", {\r\n        clubId: Number(clubId),\r\n        userId: userId,\r\n      });\r\n    } catch (err) {\r\n      message.error(\"이미 좋아요한 모임입니다.\");\r\n    } finally {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const handleLikeDelete = async (clubId) => {\r\n    try {\r\n      axios.delete(url+\"/likedClubs\", {\r\n        params: { userId: userId, clubId: Number(clubId) },\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {loading ? (\r\n        <SpinContainer>\r\n          <Spin />\r\n        </SpinContainer>\r\n      ) : (\r\n        <>\r\n          <ImageSlider />\r\n          <Title>마감 임박 순</Title>\r\n          <CardRow>\r\n            {sortByLikesClubs\r\n              .filter((club, i) => i < 8)\r\n              .map((club) => (\r\n                <MainClubCard\r\n                  key={club.id}\r\n                  userId={userId}\r\n                  club={club}\r\n                  handleLikedClubs={handleLikedClubs}\r\n                  likedClubs={likedClubs}\r\n                ></MainClubCard>\r\n              ))}\r\n          </CardRow>\r\n          <ButtonRow>\r\n            <Link to=\"/board\">\r\n              <MainButton>모임 더보기</MainButton>\r\n            </Link>\r\n          </ButtonRow>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst Wrapper = styled.section`\r\n  width: 1200px;\r\n  margin: 0 auto;\r\n  padding-bottom: 60px;\r\n  flex: 1;\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    width: 295px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 363px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 610px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 880px;\r\n  `}\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  margin: 60px 0 40px 0;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 18px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 18px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 20px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 22px;\r\n    margin: 50px 0 30px 0;\r\n  `}\r\n`;\r\n\r\nconst CardRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  gap: 24px;\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    flex-wrap: wrap;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    flex-wrap: wrap;\r\n    gap: 32px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    flex-wrap: wrap;\r\n    gap: 40px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n  `}\r\n`;\r\n\r\nconst ButtonRow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst MainButton = styled(Button)`\r\n  text-align: center;\r\n  margin: 80px 0;\r\n  border-radius: 30px;\r\n  color: #029400;\r\n  background-color: #ffffff;\r\n  border: 1px solid #029400;\r\n  padding: 10px 20px;\r\n  transition: all 0.3s;\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 16px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n  font-size: 16px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 16px;\r\n    margin: 60px 0;\r\n  `}\r\n\t&:hover {\r\n    color: #ffffff;\r\n    background-color: #029400;\r\n  }\r\n`;\r\n\r\nconst SpinContainer = styled.div`\r\n  width: 100%;\r\n  height: 80vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    height: 40vh;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    height: 40vh;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    height: 40vh;\r\n  `}\r\n`;\r\n","C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\navBar\\login\\Login.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\Button.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\Spin.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\board\\SearchBar.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\board\\ClubCard.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\board\\TagFilter.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\Pagination.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\home\\ImageSlider.js",["169"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { customMedia } from \"../../GlobalStyles\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport banner1 from \"../../images/netflix.png\";\r\nimport banner2 from \"../../images/wave.png\";\r\nimport banner3 from \"../../images/watchaplay.png\";\r\nimport banner4 from \"../../images/disneyplus.png\";\r\n\r\nexport default class ImageSlider extends Component {\r\n    render() {\r\n        const settings = {\r\n            infinite: true,\r\n            speed: 1000,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            arrows: true,\r\n            autoplay: true,\r\n            autoplaySpeed: 3000,\r\n            dots: true,\r\n        };\r\n        return (\r\n            <Wrapper>\r\n                <StyledSlider {...settings}>\r\n\r\n                    <Image onClick={() => window.open('https://www.netflix.com/kr/', '_blank')} src={banner1}></Image>\r\n                    <Image onClick={() => window.open('https://www.wavve.com/', '_blank')} src={banner2}></Image>\r\n                    <Image onClick={() => window.open('https://watcha.com/', '_blank')} src={banner3}></Image>\r\n                    <Image onClick={() => window.open('https://www.preview.disneyplus.com/ko-kr', '_blank')} src={banner4}></Image>\r\n\r\n                </StyledSlider>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\nconst Wrapper = styled.section`\r\n    margin : 0 auto;\r\n    width : 1200px;\r\n    height : 300px;\r\n    \r\n    ${customMedia.lessThan(\"mobile\")`\r\n        display : none;\r\n    `}\r\n\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n        display : none;\r\n    `}\r\n\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n        width : 880px;\r\n        height : 152.5px;\r\n    `}\r\n\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 880px;\r\n    height:220px;\r\n    `}\r\n\r\n    `;\r\n\r\nconst StyledSlider = styled(Slider)`\r\n\t.slick-prev:before,\r\n\t.slick-next:before {\r\n\t\tcolor: #029400;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t.slick-slider {\r\n\t\twidth: 100%;\r\n    height: 300px;\r\n    \r\n    ${customMedia.lessThan(\"mobile\")`\r\n      display: none;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      display: none;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      height: 152.5px;\r\n    `}\r\n    ${customMedia.lessThan(\"desktop\")`\r\n      height: 220px;\r\n    `}\r\n\t}\r\n`;\r\n\r\nconst Image = styled.img`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;\r\n","C:\\Users\\USER\\moDgo\\front\\src\\components\\home\\MainClubCard.js",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\ExpiredTag.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\SmallTag.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\Tag.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\navBar\\register\\RegisterForm.jsx",["170","171","172","173","174","175","176","177"],"import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Row,\r\n  Col,\r\n  DatePicker,\r\n  message,\r\n  Skeleton,\r\n  Modal,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\nimport { customMedia } from \"../../../../GlobalStyles\";\r\nimport Button from \"../../Button\";\r\nimport Tag from \"../../Tag\";\r\n\r\nimport netflixCover from \"../../../../images/netflixCover.png\";\r\nimport watchaCover from \"../../../../images/watchaCover.png\";\r\nimport disneyplusCover from \"../../../../images/disneyplusCover.png\";\r\nimport wavveCover from \"../../../../images/wavveCover.png\";\r\nconst url = \"http://modgo.loca.lt\";\r\n\r\nconst RegisterForm = ({ ...props }) => {\r\n  const [registerForm] = Form.useForm();\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [selectedOttTags, setSelectedOttTags] = useState([]);\r\n  // const [selectedRemainTags, setSelectedRemainTags] = useState([]);\r\n  const [coverImg, setCoverImg] = useState(null);\r\n  const tags = [\"NETFLIX\", \"WATCHA\", \"DISNEY+\", \"WAVVE\"];\r\n\r\n  //const remainTags = [\"30일 이하\", \"50일 이하\", \"100일 이하\", \"100일 이상\"];\r\n\r\n  const userId = localStorage.getItem(\"user_id\");\r\n  const ref = useRef();\r\n  const onChange = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleSelectOttTags = (e) => {\r\n    let tagName = e.target.innerText;\r\n    let index = selectedOttTags.indexOf(tagName);\r\n\r\n    if (selectedOttTags.includes(tagName)) {\r\n      selectedOttTags.splice(index, 1);\r\n      setSelectedOttTags([...selectedOttTags]);\r\n    } else if (selectedOttTags.length === 1) {\r\n      selectedOttTags.splice(index, 1);\r\n      message.error(\"태그는 1개만 선택 가능합니다!\");\r\n    } else {\r\n      setSelectedOttTags([...selectedOttTags, tagName]);\r\n    }\r\n\r\n    if (tagName === \"NETFLIX\") {\r\n      setCoverImg(netflixCover);\r\n    } else if (tagName === \"WATCHA\") {\r\n      setCoverImg(watchaCover);\r\n    } else if (tagName === \"DISNEY+\") {\r\n      setCoverImg(disneyplusCover);\r\n    } else if (tagName === \"WAVVE\") {\r\n      setCoverImg(wavveCover);\r\n    } else {\r\n      setCoverImg(Skeleton);\r\n    }\r\n  };\r\n\r\n  // 기간태그 주석처리\r\n  // const handleSelectRemainTags = (e) => {\r\n  //   let tagName = e.target.innerText;\r\n  //   let index = selectedRemainTags.indexOf(tagName);\r\n\r\n  //   if (selectedRemainTags.includes(tagName)) {\r\n  //     selectedRemainTags.splice(index, 1);\r\n  //     setSelectedRemainTags([...selectedRemainTags]);\r\n  //   } else if (selectedRemainTags.length === 1) {\r\n  //     selectedRemainTags.splice(index, 1);\r\n  //     message.error(\"태그는 1개만 선택 가능합니다!\");\r\n  //   } else {\r\n  //     setSelectedRemainTags([...selectedRemainTags, tagName]);\r\n  //   }\r\n  // };\r\n\r\n  const sendData = async (values) => {\r\n    const startDate = values.date[0]._d.toISOString().substring(0, 10);\r\n    const endDate = values.date[1]._d.toISOString().substring(0, 10);\r\n    const sendOttTags = selectedOttTags.join(\", \");\r\n    // const sendRemainTags = selectedRemainTags.join(\", \");\r\n\r\n    if (!values.requiredPerson) {\r\n      message.error(\"참여인원을 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    if (!sendOttTags) {\r\n      message.warning(\"태그를 선택해주세요.\");\r\n      return;\r\n    }\r\n\r\n    // if (!sendRemainTags) {\r\n    //   message.warning(\"기간 태그를 선택해주세요.\");\r\n    //   return;\r\n    // }\r\n\r\n    if (values.title.length > 10) {\r\n      message.warning(\"이름은 10자까지 입력 가능합니다.\");\r\n      return;\r\n    }\r\n\r\n    if (values.contents.length > 40) {\r\n      message.warning(\"한 줄 소개는 40자까지 입력 가능합니다.\");\r\n      return;\r\n    }\r\n\r\n\r\n    const data = {\r\n      userId: userId,\r\n      title: values.title,\r\n      contents: values.contents,\r\n      imgUrl: coverImg,\r\n      startDate: startDate,\r\n      endDate: endDate,\r\n      tags: sendOttTags,\r\n      // remainTags: sendRemainTags,\r\n      requiredPerson: values.requiredPerson,\r\n    };\r\n\r\n    try {\r\n      const res = await axios\r\n        .post(url + \"/clubs\", JSON.stringify(data), {\r\n          headers: {\r\n            \"Content-Type\": `application/json`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            registerForm.resetFields();\r\n            message.success(\"모임이 성공적으로 등록되었습니다!\");\r\n            props.onCancel();\r\n          } else {\r\n            message.error(\"모임 등록에 실패했습니다.\");\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    console.log(JSON.stringify(data));\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    sendData(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed: \", errorInfo);\r\n  };\r\n\r\n  const disabledDate = (current) => current && current < moment().endOf(\"day\");\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledForm\r\n        form={registerForm}\r\n        name=\"registerForm\"\r\n        layout=\"vertical\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Row gutter={32}>\r\n          <Col span={16}>\r\n            <Form.Item\r\n              label=\"이름\"\r\n              name=\"title\"\r\n              rules={[{ required: true, message: \"모임 이름을 입력하세요.\" }]}\r\n            >\r\n              <StyledInput placeholder=\"모임 이름\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"한 줄 소개\"\r\n              name=\"contents\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"모임의 한 줄 소개를 입력하세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <StyledInput placeholder=\"한 줄 소개\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"참여 인원\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"모임의 참여 인원을 입력하세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <Row>\r\n                <PersonnelRow>\r\n                  <Form.Item name=\"requiredPerson\">\r\n                    <StyledInputNumber min={2} max={4} placeholder={2} />\r\n                  </Form.Item>\r\n                  <StyledSpan>인</StyledSpan>\r\n                </PersonnelRow>\r\n              </Row>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"진행 기간\"\r\n              name=\"date\"\r\n              rules={[\r\n                {\r\n                  type: \"array\",\r\n                  required: \"true\",\r\n                  message: \"모임의 진행 기간을 입력하세요.\",\r\n                },\r\n              ]}\r\n            >\r\n              <StyledRangePicker disabledDate={disabledDate} />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <TagRow>\r\n          <TagTitle>태그 (1개만 선택 가능)</TagTitle>\r\n          <TagRow>\r\n            <TagContainer>\r\n              {tags.map((tag, i) => (\r\n                <Tag\r\n                  type=\"button\"\r\n                  key={i}\r\n                  value={i}\r\n                  onClick={handleSelectOttTags}\r\n                  selected={selectedOttTags.includes(tag) ? true : false}\r\n                >\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </TagContainer>\r\n          </TagRow>\r\n        </TagRow>\r\n        {/* <TagRow>\r\n          <TagTitle>기간 태그 (1개만 선택 가능)</TagTitle>\r\n          <TagRow>\r\n            <TagContainer>\r\n              {remainTags.map((tag, i) => (\r\n                <Tag\r\n                  type=\"button\"\r\n                  key={i}\r\n                  value={i}\r\n                  onClick={handleSelectRemainTags}\r\n                  selected={selectedRemainTags.includes(tag) ? true : false}\r\n                >\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </TagContainer>\r\n          </TagRow>\r\n        </TagRow> */}\r\n        <ButtonRow>\r\n          <FilledBtn>등록</FilledBtn>\r\n          <UnfilledBtn type=\"button\" onClick={props.onCancel}>\r\n            취소\r\n          </UnfilledBtn>\r\n        </ButtonRow>\r\n      </StyledForm>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Wrapper = styled.section`\r\n  width: 1200px;\r\n  padding: 40px 100px;\r\n  margin: 0 auto;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    width: 295px;\r\n    padding: 3px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 363px;\r\n    padding: 5px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 610px;\r\n    padding: 10px 20px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 880px;\r\n    padding: 20px 50px;\r\n  `}\r\n`;\r\n\r\nconst StyledForm = styled(Form)`\r\n  .ant-form-item-label > label {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 14px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 16px;\r\n    `}\r\n  }\r\n  .ant-form-item {\r\n    margin-bottom: 20px;\r\n  }\r\n  .ant-input:focus,\r\n  .ant-input-focused,\r\n  .ant-input:hover,\r\n  .ant-input-number:hover,\r\n  .ant-picker:hover,\r\n  .ant-picker-focused {\r\n    border-color: #029400;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  font-size: 16px;\r\n  height: 48px;\r\n  background-color: #f6f6f6;\r\n  border: 1px solid #94989b;\r\n  border-radius: 5px;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n    height: 28px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n    height: 28px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 12px;\r\n    height: 32px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 14px;\r\n    height: 40px;\r\n  `}\r\n`;\r\n\r\nconst StyledInputNumber = styled(InputNumber)`\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  width: 80px;\r\n  height: 40px;\r\n  background-color: #f6f6f6;\r\n  border: 1px solid #94989b;\r\n  border-radius: 5px;\r\n  .ant-input-number-input-wrap,\r\n  .ant-input-number-input {\r\n    height: 100%;\r\n  }\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n    width: 60px;\r\n    height: 28px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n    width: 60px;\r\n    height: 28px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 12px;\r\n    width: 50px;\r\n    height: 25px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 14px;\r\n    width: 60px;\r\n    height: 30px;\r\n  `}\r\n`;\r\n\r\nconst PersonnelRow = styled.div`\r\n  display: flex;\r\n  gap: 1px;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  align-self: center;\r\n  margin: 0 5px;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 12px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 14px;\r\n  `}\r\n`;\r\n\r\nconst TitleRow = styled.div`\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  margin: 30px 0;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 12px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 12px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 16px;\r\n  `}\r\n`;\r\n\r\nconst StyledRangePicker = styled(RangePicker)`\r\n  height: 48px;\r\n  background-color: #f6f6f6;\r\n  border: 1px solid #94989b;\r\n  border-radius: 5px;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    height: 28px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    height: 28px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    height: 32px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    height: 40px;\r\n  `}\r\n  .ant-picker-input > input {\r\n    font-size: 16px;\r\n    text-align: center;\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 12px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 14px;\r\n    `}\r\n  }\r\n  .ant-picker-active-bar {\r\n    background: #f98404;\r\n  }\r\n`;\r\n\r\n// const FileInput = styled.div`\r\n//   background-color: #f6f6f6;\r\n//   border: 1px solid #94989b;\r\n//   border-radius: 5px;\r\n//   padding: 10px;\r\n//   width: 250px;\r\n\r\n//   ${customMedia.lessThan(\"mobile\")`\r\n//     font-size: 10px;\r\n//     padding: 0;\r\n//     width: 130px;\r\n//   `}\r\n//   ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n//     font-size: 10px;\r\n//     padding: 0;\r\n//     width: 130px;\r\n//   `}\r\n//   ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n//     font-size: 12px;\r\n//     padding: 3px;\r\n//     width: 170px;\r\n//   `}\r\n\r\n//   ${customMedia.between(\"tablet\", \"desktop\")`\r\n//     font-size: 14px;\r\n//     padding: 5px;\r\n//   `}\r\n// `;\r\n\r\n// const StyledTextArea = styled(TextArea)`\r\n//   font-size: 16px;\r\n//   width: 700px;\r\n//   background-color: #f6f6f6;\r\n//   border: 1px solid #94989b;\r\n//   border-radius: 5px;\r\n//   ${customMedia.lessThan(\"mobile\")`\r\n//     font-size: 10px;\r\n//   `}\r\n//   ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n//     font-size: 10px;\r\n//   `}\r\n\r\n//   ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n//     font-size: 12px;\r\n//   `}\r\n\r\n//   ${customMedia.between(\"tablet\", \"desktop\")`\r\n//     font-size: 14px;\r\n//   `}\r\n// `;\r\n\r\nconst TagRow = styled(Row)`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst TagTitle = styled.div`\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  margin-bottom: 7px;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 16px;\r\n  `};\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    gap: 2px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    gap: 3px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    gap: 5px;\r\n  `}\r\n`;\r\n\r\n// const PreviewImage = styled.img`\r\n//   width: 263px;\r\n//   height: 263px;\r\n//   border: none;\r\n//   border-radius: 50%;\r\n//   position: relative;\r\n//   ${customMedia.lessThan(\"mobile\")`\r\n//     width: 85px;\r\n//     height: 85px;\r\n//   `}\r\n//   ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n//     width: 100px;\r\n//     height: 100px;\r\n//   `}\r\n//   ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n//     width: 120px;\r\n//     height: 120px;\r\n//   `}\r\n//   ${customMedia.between(\"tablet\", \"desktop\")`\r\n//     width: 180px;\r\n//     height: 180px;\r\n//   `}\r\n// `;\r\n\r\n// const TrashBtn = styled.div`\r\n//   width: 24px;\r\n//   height: 24px;\r\n//   cursor: pointer;\r\n//   z-index: 10;\r\n//   position: absolute;\r\n//   top: 10%;\r\n//   right: 25%;\r\n\r\n//   ${customMedia.lessThan(\"mobile\")`\r\n//     width: 10px;\r\n//     height: 10px;\r\n//     top: 5%;\r\n//     right: 15%;\r\n//   `}\r\n//   ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n//     width: 12px;\r\n//     height: 12px;\r\n//     top: 5%;\r\n//   `}\r\n//   ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n//     width: 18px;\r\n//     height: 18px;\r\n//   `}\r\n// \timg {\r\n//     width: 100%;\r\n//     height: 100%;\r\n//   }\r\n// `;\r\n\r\nconst ButtonRow = styled(Row)`\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 88px;\r\n`;\r\n\r\n// const MapWrapper = styled.div`\r\n//   width: 1000px;\r\n//   height: 250px;\r\n//   margin-top: 40px;\r\n//   ${customMedia.lessThan(\"mobile\")`\r\n//     width: 282px;\r\n//     height: 200px;\r\n//   `}\r\n//   ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n//     width: 350px;\r\n//     height: 200px;\r\n//   `}\r\n//   ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n//     width: 567px;\r\n//   `}\r\n//   ${customMedia.between(\"tablet\", \"desktop\")`\r\n//     width: 777px;\r\n//   `}\r\n// `;\r\n\r\nconst FilledBtn = styled(Button)`\r\n  & {\r\n    color: #ffffff;\r\n    background-color: #029400;\r\n    border: none;\r\n    border-radius: 6px;\r\n    outline: none;\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 12px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 16px;\r\n    `}\r\n  }\r\n`;\r\n\r\nconst UnfilledBtn = styled(Button)`\r\n  & {\r\n    color: #029400;\r\n    background-color: #ffffff;\r\n    border: 2px solid #029400;\r\n    border-radius: 6px;\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 12px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 16px;\r\n    `}\r\n  }\r\n`;\r\n\r\n// const SkeletonImg = styled(Skeleton.Image)`\r\n//   .ant-skeleton-image {\r\n//     width: 263px;\r\n//     height: 263px;\r\n//     border-radius: 50%;\r\n//     ${customMedia.lessThan(\"mobile\")`\r\n//       width: 85px;\r\n//       height: 85px;\r\n//     `}\r\n//     ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n//       width: 100px;\r\n//       height: 100px;\r\n//   `}\r\n//     ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n//       width: 120px;\r\n//       height: 120px;\r\n//     `}\r\n//     ${customMedia.between(\"tablet\", \"desktop\")`\r\n//       width: 180px;\r\n//       height: 180px;\r\n//     `}\r\n//   }\r\n// `;\r\n\r\nconst NavRegister = styled.div`\r\n  width: 48px;\r\n  height: 48px;\r\n  cursor: pointer;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    width: 28px;\r\n    height: 28px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 30px;\r\n    height: 30px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 32px;\r\n    height: 32px;\r\n  `}\r\n`;\r\n\r\nconst StyledModal = styled(Modal)`\r\n  display: flex;\r\n  justify-content: center;\r\n  .ant-modal-content {\r\n    padding: 30px 55px;\r\n    display: flex;\r\n    align-items: center;\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      padding: 10px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      padding: 10px 15px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      padding: 20px 35px;\r\n    `}\r\n  }\r\n  .ant-modal-body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 48px;\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      gap: 24px;\r\n      padding: 15px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      gap: 26px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      gap: 32px;\r\n    `}\r\n  }\r\n  .ant-modal-footer {\r\n    display: none;\r\n  }\r\n`;","C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\Main.jsx",["178","179","180","181","182","183","184","185","186","187","188","189","190","191"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Tabs, Row, Divider, message, Modal } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { customMedia } from \"../../GlobalStyles\";\r\n\r\n// import MyComment from \"./MyComment\";\r\nimport EditForm from \"./EditForm\";\r\nimport LikedClubCard from \"./LikedClubCard\";\r\nimport JoinedClubCard from \"./JoinedClubCard\";\r\nimport Member from \"./Member\";\r\nimport PendingMember from \"./PendingMember\";\r\nimport Pagination from \"../common/Pagination\";\r\nimport Button from \"../common/Button\";\r\nimport NotFound from \"../common/NotFound\";\r\nimport Spin from \"../common/Spin\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst url = \"http://modgo.loca.lt\";\r\n\r\n\r\nconst Main = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [myClub, setMyClub] = useState();\r\n  const [likedClubs, setLikedClubs] = useState([]);\r\n  const [myLikedClubs, setMyLikedClubs] = useState([]);\r\n  const [myJoinedClubs, setMyJoinedClubs] = useState([]);\r\n  // const [myComments, setMyComments] = useState(null);\r\n  const [myPendingMembers, setMyPendingMembers] = useState();\r\n  const [myPendingMembersTotal, setMyPendingMembersTotal] = useState(0);\r\n  const [myPendingMembersPage, setMyPendingMembersPage] = useState(1);\r\n  const [myMembers, setMyMembers] = useState();\r\n  const [myMembersTotal, setMyMembersTotal] = useState(0);\r\n  const [myMembersPage, setMyMembersPage] = useState(1);\r\n  // const [myCommentsTotal, setMyCommentsTotal] = useState(0);\r\n  // const [myCommentsPage, setMyCommentsPage] = useState(1);\r\n  const [myLikedClubsTotal, setMyLikedClubsTotal] = useState(0);\r\n  const [myLikedClubsPage, setMyLikedClubsPage] = useState(1);\r\n  const [myJoinedClubsTotal, setMyJoinedClubsTotal] = useState(0);\r\n  const [myJoinedClubsPage, setMyJoinedClubsPage] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  const userId = localStorage.getItem(\"user_id\");\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [\r\n    myMembersPage,\r\n    myPendingMembersPage,\r\n    myJoinedClubsPage,\r\n    myLikedClubsTotal,\r\n    myLikedClubsPage,\r\n    // myCommentsPage,\r\n  ]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n\r\n      // const res = await axios.get(url + `/comments/users/${userId}`, {\r\n      //   params: { page: myCommentsPage },\r\n      // });\r\n\r\n\r\n      // setMyComments(res.data.commentList);\r\n      // setMyCommentsTotal(res.data.totalCount);\r\n\r\n\r\n      const likedClubsRes = await axios.get(\r\n        url + `/likedClubs/users/${userId}`,\r\n        {\r\n          params: { page: myLikedClubsPage },\r\n        }\r\n      );\r\n      setMyLikedClubs(likedClubsRes.data.likedClubList);\r\n      setMyLikedClubsTotal(likedClubsRes.data.totalCount);\r\n\r\n      const joinedClubsRes = await axios.get(url + `/members/users/${userId}`, {\r\n\r\n        params: {\r\n          page: myJoinedClubsPage,\r\n        },\r\n      });\r\n\r\n      setMyJoinedClubs(joinedClubsRes.data.joiningClubList);\r\n      setMyJoinedClubsTotal(joinedClubsRes.data.totalCount);\r\n\r\n\r\n      const myClubRes = await axios.get(url + `/clubs/users/${userId}`);\r\n\r\n      if (myClubRes.data) {\r\n        const pendingMembersRes = await axios.get(url + \"/members\", {\r\n\r\n          params: {\r\n            userId: userId,\r\n            approvalStatus: \"WAITING\",\r\n            page: myPendingMembersPage,\r\n          },\r\n        });\r\n\r\n        setMyPendingMembers(pendingMembersRes.data.memberList);\r\n        setMyPendingMembersTotal(pendingMembersRes.data.totalCount);\r\n\r\n\r\n        const memberRes = await axios.get(url + \"/members\", {\r\n\r\n          params: {\r\n            userId: userId,\r\n            approvalStatus: \"CONFIRMED\",\r\n            page: myMembersPage,\r\n          },\r\n        });\r\n\r\n        setMyMembers(memberRes.data.memberList);\r\n        setMyMembersTotal(memberRes.data.totalCount);\r\n      }\r\n\r\n      setMyClub(myClubRes.data);\r\n\r\n\r\n      const likedClubRes = await axios.get(url + \"/likedClubs/ids\", {\r\n\r\n        params: {\r\n          userId: userId,\r\n        },\r\n      });\r\n      setLikedClubs(likedClubRes.data.likedClubIdList);\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n\r\n  // const handleDeleteClub = async () => {\r\n  //   try {\r\n  //     const res = await axios.get(url + `/clubs/users/${userId}`);\r\n\r\n  //     if (res.data) {\r\n  //       const deleteRes = await axios.delete(url + `/clubs/users/${userId}`);\r\n\r\n  //       if (deleteRes.status === 200) {\r\n  //         message.success(\"모임이 성공적으로 삭제되었습니다.\");\r\n  //         handleCancel();\r\n  //         history.go(0);\r\n  //       } else {\r\n  //         message.error(\"모임 삭제에 실패하였습니다.\");\r\n  //       }\r\n  //     } else {\r\n  //       message.error(\"현재 운영중인 독서모임이 존재하지 않습니다.\");\r\n  //     }\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleLikedClubs = (clubId) => {\r\n    let index = likedClubs.indexOf(clubId);\r\n\r\n    try {\r\n      if (likedClubs.includes(clubId)) {\r\n        likedClubs.splice(index, 1);\r\n        setLikedClubs([...likedClubs]);\r\n        handleLikeDelete(clubId);\r\n      } else {\r\n        setLikedClubs([...likedClubs, clubId]);\r\n        handleLikePost(clubId);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const handleLikePost = async (clubId) => {\r\n    try {\r\n\r\n      await axios.post(url + \"/likedClubs\", {\r\n\r\n        clubId: Number(clubId),\r\n        userId: userId,\r\n      });\r\n    } catch (err) {\r\n      message.error(\"이미 좋아요한 모임입니다.\");\r\n    } finally {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const handleLikeDelete = async (clubId) => {\r\n    try {\r\n\r\n      axios.delete(url + \"/likedClubs\", {\r\n\r\n        params: { userId: userId, clubId: Number(clubId) },\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const handleMemberApproval = async (memberId) => {\r\n    try {\r\n\r\n      const res = axios.put(url + \"/members\", { memberId: memberId });\r\n\r\n      if (res.status === 200) {\r\n        message.success(\"모임 참여가 승인되었습니다.\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const handleMemberReject = async (userId, clubId) => {\r\n    try {\r\n\r\n      const res = axios.delete(url + \"/members\", {\r\n\r\n        params: {\r\n          userId: userId,\r\n          clubId: clubId,\r\n          delete: \"NO\",\r\n        },\r\n      });\r\n      if (res.status === 200) {\r\n        message.warning(\"모임 참여가 거절되었습니다.\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n\r\n  // const handleMemberDelete = async (userId, clubId) => {\r\n  //   try {\r\n  //     const res = axios.delete(url + \"/members\", {\r\n  //       params: {\r\n  //         userId: userId,\r\n  //         clubId: Number(clubId),\r\n  //         delete: \"OUT\",\r\n  //       },\r\n  //     });\r\n\r\n  //     if (res.status === 200) {\r\n  //       message.warning(\"모임에서 내보내기 처리되었습니다.\");\r\n  //     }\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   } finally {\r\n  //     fetchData();\r\n  //   }\r\n  // };\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      {loading ? (\r\n        <SpinContainer>\r\n          <Spin />\r\n        </SpinContainer>\r\n      ) : (\r\n        <>\r\n          <StyledTabs defaultActiveKey=\"1\">\r\n            {/* <TabPane tab=\"내 댓글\" key=\"1\">\r\n              {myCommentsTotal !== 0 ? (\r\n                <TabContainer gutter={[0, 102]}>\r\n                  <Row gutter={[0, 16]}>\r\n                    {myComments.map((comment) => (\r\n                      <Row key={comment.id}>\r\n                        <MyComment myComment={comment} />\r\n                      </Row>\r\n                    ))}\r\n                  </Row>\r\n                  <PaginationRow>\r\n                    <Pagination\r\n                      total={myCommentsTotal}\r\n                      pageSize={10}\r\n                      current={myCommentsPage}\r\n                      onChange={(page) => setMyCommentsPage(page)}\r\n                    />\r\n                  </PaginationRow>\r\n                </TabContainer>\r\n              ) : (\r\n                <NotFound>🚫 내 댓글이 존재하지 않습니다.🚫</NotFound>\r\n              )}\r\n            </TabPane> */}\r\n            <TabPane tab=\"좋아요한 모임\" key=\"1\">\r\n              {myLikedClubsTotal !== 0 ? (\r\n                <TabContainer>\r\n                  <CardRow>\r\n                    {myLikedClubs.map((likedClub) => (\r\n                      <LikedClubCard\r\n                        key={likedClub.id}\r\n                        userId={userId}\r\n                        club={likedClub}\r\n                        handleLikeDelete={handleLikeDelete}\r\n                        like={likedClub.clubId}\r\n                      />\r\n                    ))}\r\n                  </CardRow>\r\n                  <PaginationRow>\r\n                    <Pagination\r\n                      total={myLikedClubsTotal}\r\n                      pageSize={9}\r\n                      current={myLikedClubsPage}\r\n                      onChange={(page) => setMyLikedClubsPage(page)}\r\n                    />\r\n                  </PaginationRow>\r\n                </TabContainer>\r\n              ) : (\r\n                <NotFound>🚫 좋아요한 모임이 존재하지 않습니다 🚫</NotFound>\r\n              )}\r\n            </TabPane>\r\n            <TabPane tab=\"참여중인 모임\" key=\"2\">\r\n              {myJoinedClubsTotal !== 0 ? (\r\n                <TabContainer>\r\n                  <CardRow>\r\n                    {myJoinedClubs.map((joinedClub) => (\r\n                      <JoinedClubCard\r\n                        key={joinedClub.id}\r\n                        userId={userId}\r\n                        club={joinedClub}\r\n                        likedClubs={likedClubs}\r\n                        handleLikedClubs={handleLikedClubs}\r\n                      />\r\n                    ))}\r\n                  </CardRow>\r\n                  <PaginationRow>\r\n                    <Pagination\r\n                      total={myJoinedClubsTotal}\r\n                      pageSize={9}\r\n                      current={myJoinedClubsPage}\r\n                      onChange={(page) => setMyJoinedClubsPage(page)}\r\n                    />\r\n                  </PaginationRow>\r\n                </TabContainer>\r\n              ) : (\r\n                <NotFound>🚫 참여중인 모임이 존재하지 않습니다 🚫</NotFound>\r\n              )}\r\n            </TabPane>\r\n            <TabPane tab=\"모임 관리\" key=\"3\">\r\n              {myClub ? (\r\n                <TabContainer gutter={[0, 100]}>\r\n                  <Box>\r\n                    <MidTitle>참여자 관리</MidTitle>\r\n                    <Text>승인 대기자</Text>\r\n                    {myPendingMembers.length !== 0 ? (\r\n                      <>\r\n                        <Row gutter={[0, 16]}>\r\n                          {myPendingMembers.map((member) => (\r\n                            <Row key={member.id}>\r\n                              <PendingMember\r\n                                myPendingMember={member}\r\n                                handleMemberReject={handleMemberReject}\r\n                                handleMemberApproval={handleMemberApproval}\r\n                              />\r\n                            </Row>\r\n                          ))}\r\n                        </Row>\r\n                        <PaginationRow>\r\n                          <Pagination\r\n                            total={myPendingMembersTotal}\r\n                            pageSize={3}\r\n                            current={myPendingMembersPage}\r\n                            onChange={(page) => setMyPendingMembersPage(page)}\r\n                          />\r\n                        </PaginationRow>\r\n                      </>\r\n                    ) : (\r\n                      <MemberNotFound>\r\n                        🚫 현재 대기중인 멤버가 없습니다. 🚫\r\n                      </MemberNotFound>\r\n                    )}\r\n                    <Divider />\r\n                    <Text>참여자 목록</Text>\r\n                    {myMembers.length !== 0 ? (\r\n                      <>\r\n                        <Row gutter={[0, 16]}>\r\n                          {myMembers.map((member) => (\r\n                            <Row key={member.id}>\r\n                              <Member myMember={member} />\r\n                            </Row>\r\n                          ))}\r\n                        </Row>\r\n                        <PaginationRow>\r\n                          <Pagination\r\n                            total={myMembersTotal}\r\n                            pageSize={3}\r\n                            current={myMembersPage}\r\n                            onChange={(page) => setMyMembersPage(page)}\r\n                          />\r\n                        </PaginationRow>\r\n                      </>\r\n                    ) : (\r\n                      <MemberNotFound>\r\n                        🚫 현재 참여중인 멤버가 없습니다. 🚫\r\n                      </MemberNotFound>\r\n                    )}\r\n                  </Box>\r\n                  <Box>\r\n                    <MidTitle>정보 수정</MidTitle>\r\n                    <EditForm myClub={myClub} />\r\n                    <Divider />\r\n                  </Box>\r\n                </TabContainer>\r\n              ) : (\r\n                <NotFound>\r\n                  🚫 현재 운영중인 모임이 존재하지 않습니다 🚫\r\n                </NotFound>\r\n              )}\r\n            </TabPane>\r\n          </StyledTabs>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 1200px;\r\n  margin: 0 auto;\r\n  flex: 1;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    width: 295px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 363px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 610px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 880px;\r\n  `}\r\n`;\r\n\r\nconst TabContainer = styled(Row)`\r\n  width: 100%;\r\n  margin-top: 70px;\r\n  padding-bottom: 60px;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    margin-top: 40px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    margin-top: 40px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    margin-top: 40px;\r\n  `}\r\n`;\r\n\r\nconst StyledTabs = styled(Tabs)`\r\n  .ant-tabs-tab-btn {\r\n    font-size: 22px;\r\n\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 14px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 16px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 16px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 18px;\r\n    `}\r\n  }\r\n  .ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn {\r\n    color: #fa9423;\r\n    font-weight: bold;\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-weight: 500;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-weight: 500;\r\n    `}\r\n    \r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-weight: 500;\r\n    `}\r\n  }\r\n  .ant-tabs-tab:hover {\r\n    color: #fa9423;\r\n  }\r\n  .ant-tabs-ink-bar {\r\n    border: 2px solid #fa9423;\r\n    background-color: #fa9423;\r\n  }\r\n`;\r\n\r\nconst CardRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 60px;\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    gap: 20px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    gap: 20px;\r\n  `}\r\n`;\r\n\r\nconst MidTitle = styled.div`\r\n  width: 100%;\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 14px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n  font-size: 14px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 16px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 18px;\r\n  `}\r\n`;\r\n\r\nconst LargeText = styled.div`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 12px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 12px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 18px;\r\n  `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 15px;\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 12px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 14px;\r\n  `}\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst DeleteBtnContainer = styled.div`\r\n  width: 100%;\r\n  border: 1px solid #c4c4c4;\r\n  border-radius: 5px;\r\n  padding: 25px;\r\n  display: flex;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n    padding: 15px;\r\n    flex-direction: column;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n    padding: 15px;\r\n    flex-direction: column;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n  `}\r\n  \r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 18px;\r\n  `}\r\n`;\r\n\r\nconst DeleteBtn = styled(Button)`\r\n  width: 140px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  background-color: #ff0000;\r\n  border: none;\r\n  padding: 0 20px;\r\n  border-radius: 6px;\r\n  text-align: center;\r\n  flex: 0.1;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n    padding: 5px 15px;\r\n    align-self: center;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n    padding: 5px 15px;\r\n    align-self: center;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 80px;\r\n    font-size: 12px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 120px;\r\n    font-size: 16px;\r\n  `}\r\n`;\r\n\r\nconst StyledModal = styled(Modal)`\r\n  display: flex;\r\n  justify-content: center;\r\n  .ant-modal-content {\r\n    padding: 30px 55px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      padding: 3px 7px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      padding: 5px 10px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      padding: 10px 25px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      padding: 30px 55px;\r\n    `}\r\n  }\r\n  .ant-modal-body {\r\n    text-align: center;\r\n\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      padding: 30px 55px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      padding: 30px 55px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      padding: 30px 55px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      padding: 30px 55px;\r\n    `}\r\n  }\r\n  .ant-modal-footer {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst ModalTitle = styled.div`\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 14px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 16px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 18px;\r\n  `}\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 20px;\r\n  `}\r\n`;\r\n\r\nconst ButtonRow = styled(Row)`\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 50px;\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    margin-top: 15px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    margin-top: 15px;\r\n  `}\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    margin-top: 20px;\r\n  `}\r\n`;\r\n\r\nconst FilledBtn = styled(Button)`\r\n  & {\r\n    color: #ffffff;\r\n    background-color: #ff6701;\r\n    border: none;\r\n    border-radius: 6px;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 12px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 14px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 16px;\r\n    `}\r\n  }\r\n`;\r\n\r\nconst UnfilledBtn = styled(Button)`\r\n  & {\r\n    color: #ff6701;\r\n    background-color: #ffffff;\r\n    border: 2px solid #ff6701;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 12px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 14px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 16px;\r\n    `}\r\n  }\r\n`;\r\n\r\nconst PaginationRow = styled(Row)`\r\n  width: 100%;\r\n  margin: 30px auto;\r\n  justify-content: center;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    margin: 20px auto;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    margin: 20px auto;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    margin: 20px auto;\r\n  `}\r\n`;\r\n\r\nconst SpinContainer = styled.div`\r\n  width: 100%;\r\n  height: 80vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    height: 40vh;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    height: 40vh;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    height: 40vh;\r\n  `}\r\n`;\r\n\r\nconst MemberNotFound = styled(NotFound)`\r\n  & {\r\n    height: 100px;\r\n    font-size: 16px;\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 12px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 14px;\r\n    `}\r\n  }\r\n`;\r\n","C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\EditForm.jsx",["192","193","194"],"import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n\tForm,\r\n\tInput,\r\n\tInputNumber,\r\n\tRow,\r\n\tCol,\r\n\tDatePicker,\r\n\tmessage,\r\n\tSkeleton,\r\n} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport { customMedia } from \"../../GlobalStyles\";\r\n\r\n//import MapContainer from \"../common/MapContainer\";\r\nimport Button from \"../common/Button\";\r\nimport Tag from \"../common/Tag\";\r\n\r\nimport trash from \"../../images/icons/trash.png\";\r\n\r\nconst EditForm = ({ ...props }) => {\r\n\tconst [editForm] = Form.useForm();\r\n\tconst [inputText, setInputText] = useState(\"\");\r\n\tconst [streetAddress, setStreetAddress] = useState(\r\n\t\tprops.myClub.addressStreet\r\n\t);\r\n\tconst [detailAddress, setDetailAddress] = useState(\r\n\t\tprops.myClub.addressDetail\r\n\t);\r\n\tconst [imgFile, setImgFile] = useState(props.myClub.imgUrl);\r\n\tconst [preview, setPreview] = useState(props.myClub.imgUrl);\r\n\tconst [startDate, setStartDate] = useState(props.myClub.startDate);\r\n\tconst [endDate, setEndDate] = useState(props.myClub.endDate);\r\n\tconst [selectedTags, setSelectedTags] = useState(\r\n\t\tprops.myClub.tags ? props.myClub.tags.split(\", \") : []\r\n\t);\r\n\tconst userId = localStorage.getItem(\"user_id\");\r\n\tconst fullAddress = streetAddress + \" \" + detailAddress;\r\n\tconst tags = [\r\n\t\t\"소수정예\",\r\n\t\t\"온라인\",\r\n\t\t\"오프라인\",\r\n\t\t\"온/오프라인\",\r\n\t\t\"수도권\",\r\n\t\t\"지방\",\r\n\t\t\"친목\",\r\n\t\t\"독서 외 활동\",\r\n\t];\r\n\r\n\tconst ref = useRef();\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetInputText(e.target.value);\r\n\t};\r\n\r\n\tconst getStreetAddress = () => {\r\n\t\tsetStreetAddress(inputText);\r\n\t\tsetInputText(\"\");\r\n\t};\r\n\r\n\tconst getDetailAddress = () => {\r\n\t\tsetDetailAddress(inputText);\r\n\t\tsetInputText(\"\");\r\n\t};\r\n\r\n\tconst getFullAdress = (e) => {\r\n\t\tgetStreetAddress();\r\n\t\tgetDetailAddress();\r\n\t};\r\n\r\n\tconst handleImgChange = (e) => {\r\n\t\tlet file = e.target.files[0];\r\n\t\tlet reader = new FileReader();\r\n\r\n\t\treader.onloadend = () => {\r\n\t\t\tsetImgFile(file);\r\n\t\t\tsetPreview(reader.result);\r\n\t\t};\r\n\t\tif (file) {\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleImgDelete = () => {\r\n\t\tref.current.value = \"\";\r\n\t\tsetPreview();\r\n\t};\r\n\r\n\tconst handleSelectTags = (e) => {\r\n\t\tlet tagName = e.target.innerText;\r\n\t\tlet index = selectedTags.indexOf(tagName);\r\n\r\n\t\tif (selectedTags.includes(tagName)) {\r\n\t\t\tselectedTags.splice(index, 1);\r\n\t\t\tsetSelectedTags([...selectedTags]);\r\n\t\t} else if (selectedTags.length === 3) {\r\n\t\t\tselectedTags.splice(index, 1);\r\n\t\t\tmessage.error(\"태그는 최대 3개까지 선택 가능합니다!\");\r\n\t\t} else {\r\n\t\t\tsetSelectedTags([...selectedTags, tagName]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst sendData = async (values) => {\r\n\t\tsetStartDate(values.date[0]._d.toISOString().substring(0, 10));\r\n\t\tsetEndDate(values.date[1]._d.toISOString().substring(0, 10));\r\n\t\tconst sendTags = selectedTags.join(\", \");\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tif (!values.minPersonnel || !values.maxPersonnel) {\r\n\t\t\tmessage.error(\"참여인원을 입력해주세요.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!sendTags) {\r\n\t\t\tmessage.error(\"태그를 선택해주세요.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (values.title.length > 10) {\r\n\t\t\tmessage.warning(\"이름은 10자까지 입력 가능합니다.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (values.contents.length > 40) {\r\n\t\t\tmessage.warning(\"한 줄 소개는 40자까지 입력 가능합니다.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (values.publishedAt < 0) {\r\n\t\t\tmessage.warning(\"출판연도는 숫자 0 이상부터 입력 가능합니다.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tformData.append(\"title\", values.title);\r\n\t\tformData.append(\"contents\", values.contents);\r\n\t\tformData.append(\"startDate\", startDate);\r\n\t\tformData.append(\"endDate\", endDate);\r\n\t\tformData.append(\"minPersonnel\", values.minPersonnel);\r\n\t\tformData.append(\"maxPersonnel\", values.maxPersonnel);\r\n\t\tformData.append(\"tags\", sendTags);\r\n\t\tformData.append(\"bookTitle\", values.bookTitle);\r\n\t\tformData.append(\"author\", values.author);\r\n\t\tformData.append(\r\n\t\t\t\"publisher\",\r\n\t\t\tvalues.publisher === \"없음\" ? \"\" : values.publisher\r\n\t\t);\r\n\t\tformData.append(\r\n\t\t\t\"publishedAt\",\r\n\t\t\tvalues.publishedAt === 0 ? 0 : values.publishedAt\r\n\t\t);\r\n\t\tformData.append(\"bookDescription\", values.bookDescription);\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\r\n\t\t\t\"addressStreet\",\r\n\t\t\tvalues.addressStreet === \"없음\" ? \"\" : values.addressStreet\r\n\t\t);\r\n\t\tformData.append(\r\n\t\t\t\"addressDetail\",\r\n\t\t\tvalues.addressDetail === \"없음\" ? \"\" : values.addressDetail\r\n\t\t);\r\n\r\n\t\tif (props.myClub.imgUrl !== imgFile) {\r\n\t\t\tformData.append(\"img\", imgFile);\r\n\t\t} else {\r\n\t\t\tformData.append(\"img\", props.myClub.imgUrl);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await axios.put(`/clubs/users/${userId}`, formData);\r\n\r\n\t\t\tif (res.status === 200)\r\n\t\t\t\tmessage.success(\"독서모임이 성공적으로 수정되었습니다!\");\r\n\t\t\telse message.error(\"독서모임 수정에 실패했습니다.\");\r\n\t\t} catch (err) {\r\n\t\t\tif (\r\n\t\t\t\terr.response.data.message ===\r\n\t\t\t\t\"Maximum upload size exceeded; nested exception is java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.impl.FileSizeLimitExceededException: The field img exceeds its maximum permitted size of 1048576 bytes.\"\r\n\t\t\t)\r\n\t\t\t\tmessage.warning(\r\n\t\t\t\t\t\"사진 용량이 초과되었습니다! 사진을 다시 등록해주세요.\"\r\n\t\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onFinish = async (values) => {\r\n\t\ttry {\r\n\t\t\tsendData(values);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onFinishFailed = (errorInfo) => {\r\n\t\tconsole.log(\"Failed: \", errorInfo);\r\n\t};\r\n\r\n\tconst disabledDate = (current) => current && current < moment().endOf(\"day\");\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<StyledForm\r\n\t\t\t\tform={editForm}\r\n\t\t\t\tname=\"editForm\"\r\n\t\t\t\tlayout=\"vertical\"\r\n\t\t\t\tonFinish={onFinish}\r\n\t\t\t\tonFinishFailed={onFinishFailed}\r\n\t\t\t>\r\n\t\t\t\t<Row gutter={32}>\r\n\t\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\tinitialValue={props.myClub.title}\r\n\t\t\t\t\t\t\tlabel=\"이름\"\r\n\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\trules={[{ required: true, message: \"모임 이름을 입력하세요.\" }]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<StyledInput placeholder=\"이름\" />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\tinitialValue={props.myClub.contents}\r\n\t\t\t\t\t\t\tlabel=\"한 줄 소개\"\r\n\t\t\t\t\t\t\tname=\"contents\"\r\n\t\t\t\t\t\t\trules={[\r\n\t\t\t\t\t\t\t\t{ required: true, message: \"모임의 한 줄 소개를 입력하세요.\" },\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<StyledInput placeholder=\"한 줄 소개\" />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\tlabel=\"참여 인원\"\r\n\t\t\t\t\t\t\trules={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\tmessage: \"모임의 참여 인원을 입력하세요.\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<PersonnelRow>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={props.myClub.minPersonnel}\r\n\t\t\t\t\t\t\t\t\t\tname=\"minPersonnel\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<StyledInputNumber min={2} placeholder={2} />\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t<StyledSpan> 인 ~ </StyledSpan>\r\n\t\t\t\t\t\t\t\t</PersonnelRow>\r\n\t\t\t\t\t\t\t\t<PersonnelRow>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tinitialValue={props.myClub.maxPersonnel}\r\n\t\t\t\t\t\t\t\t\t\tname=\"maxPersonnel\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<StyledInputNumber min={2} placeholder={2} />\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t<StyledSpan> 인 </StyledSpan>\r\n\t\t\t\t\t\t\t\t</PersonnelRow>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\tinitialValue={[\r\n\t\t\t\t\t\t\t\tmoment(props.myClub.startDate),\r\n\t\t\t\t\t\t\t\tmoment(props.myClub.endDate),\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tlabel=\"진행 기간\"\r\n\t\t\t\t\t\t\tname=\"date\"\r\n\t\t\t\t\t\t\trules={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttype: \"array\",\r\n\t\t\t\t\t\t\t\t\trequired: \"true\",\r\n\t\t\t\t\t\t\t\t\tmessage: \"모임의 진행 기간을 입력하세요.\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<StyledRangePicker disabledDate={disabledDate} />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={8}>\r\n\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\tlabel=\"사진\"\r\n\t\t\t\t\t\t\tname=\"img\"\r\n\t\t\t\t\t\t\trules={[\r\n\t\t\t\t\t\t\t\t{ required: false, message: \"모임의 사진을 업로드하세요.\" },\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tstyle={{ textAlign: \"center\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Row gutter={[0, 24]} justify=\"center\">\r\n\t\t\t\t\t\t\t\t{!preview ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<SkeletonImg />\r\n\t\t\t\t\t\t\t\t\t\t<TrashBtn>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={trash} alt=\"Trash icon\" />\r\n\t\t\t\t\t\t\t\t\t\t</TrashBtn>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<PreviewImage\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={preview}\r\n\t\t\t\t\t\t\t\t\t\t\talt=\"Preview image\"\r\n\t\t\t\t\t\t\t\t\t\t></PreviewImage>\r\n\t\t\t\t\t\t\t\t\t\t<TrashBtn onClick={handleImgDelete}>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={trash} alt=\"Trash icon\" />\r\n\t\t\t\t\t\t\t\t\t\t</TrashBtn>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<FileInput>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleImgChange}\r\n\t\t\t\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FileInput>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<TagRow>\r\n\t\t\t\t\t<TagTitle>태그 (3개까지 선택 가능)</TagTitle>\r\n\t\t\t\t\t<TagContainer>\r\n\t\t\t\t\t\t{tags.map((tag, i) => (\r\n\t\t\t\t\t\t\t<Tag\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tvalue={i}\r\n\t\t\t\t\t\t\t\tonClick={handleSelectTags}\r\n\t\t\t\t\t\t\t\tselected={selectedTags.includes(tag) ? true : false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{tag}\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TagContainer>\r\n\t\t\t\t</TagRow>\r\n\t\t\t\t<TitleRow>선정도서</TitleRow>\r\n\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tinitialValue={props.myClub.bookTitle}\r\n\t\t\t\t\t\tlabel=\"도서명\"\r\n\t\t\t\t\t\tname=\"bookTitle\"\r\n\t\t\t\t\t\trules={[{ required: true, message: \"도서명을 입력하세요.\" }]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StyledInput placeholder=\"도서명\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tinitialValue={props.myClub.author}\r\n\t\t\t\t\t\tlabel=\"작가명\"\r\n\t\t\t\t\t\tname=\"author\"\r\n\t\t\t\t\t\trules={[{ required: true, message: \"작가명을 입력하세요.\" }]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StyledInput placeholder=\"작가명\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tinitialValue={\r\n\t\t\t\t\t\t\tprops.myClub.publisher === \"undefined\"\r\n\t\t\t\t\t\t\t\t? \"\"\r\n\t\t\t\t\t\t\t\t: props.myClub.publisher\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlabel=\"출판사\"\r\n\t\t\t\t\t\tname=\"publisher\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StyledInput placeholder=\"출판사\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tinitialValue={\r\n\t\t\t\t\t\t\tprops.myClub.publishedAt === 0 ? 0 : props.myClub.publishedAt\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlabel=\"출판연도\"\r\n\t\t\t\t\t\tname=\"publishedAt\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StyledInputNumber placeholder={1900} />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tinitialValue={props.myClub.bookDescription}\r\n\t\t\t\t\t\tlabel=\"도서 선정 이유 및 소개글\"\r\n\t\t\t\t\t\tname=\"bookDescription\"\r\n\t\t\t\t\t\trules={[\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: \"도서 선정 이유 및 소개글을 입력하세요.\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<StyledTextArea\r\n\t\t\t\t\t\t\trows={10}\r\n\t\t\t\t\t\t\tplaceholder={\"도서를 선정한 이유 및 소개글을 작성해주세요.\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\tinitialValue={props.myClub.description}\r\n\t\t\t\t\t\t\tlabel=\"상세설명\"\r\n\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\trules={[\r\n\t\t\t\t\t\t\t\t{ required: true, message: \"모임의 상세설명을 입력하세요.\" },\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<StyledTextArea\r\n\t\t\t\t\t\t\t\trows={10}\r\n\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\t\"모임의 소개글이나 공지사항, 연락처 등 상세한 설명을 작성해주세요.\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t{/* <Row>\r\n\t\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t\t<Form.Item label=\"위치\">\r\n\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\tname=\"addressStreet\"\r\n\t\t\t\t\t\t\t\tinitialValue={\r\n\t\t\t\t\t\t\t\t\tprops.myClub.addressStreet === \"undefined\"\r\n\t\t\t\t\t\t\t\t\t\t? \"\"\r\n\t\t\t\t\t\t\t\t\t\t: props.myClub.addressStreet\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<StyledInput\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"도로명 주소\"\r\n\t\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\t\tvalue={inputText}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\tname=\"addressDetail\"\r\n\t\t\t\t\t\t\t\tinitialValue={\r\n\t\t\t\t\t\t\t\t\tprops.myClub.addressDetail === \"undefined\"\r\n\t\t\t\t\t\t\t\t\t\t? \"\"\r\n\t\t\t\t\t\t\t\t\t\t: props.myClub.addressDetail\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<StyledInput placeholder=\"상세 주소\" />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t<FilledBtn type=\"button\" onClick={getFullAdress}>\r\n\t\t\t\t\t\t\t주소 검색\r\n\t\t\t\t\t\t</FilledBtn>\r\n\t\t\t\t\t\t<MapWrapper>\r\n\t\t\t\t\t\t\t<MapContainer searchSpot={fullAddress} />\r\n\t\t\t\t\t\t</MapWrapper>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row> */}\r\n\t\t\t\t<ButtonRow>\r\n\t\t\t\t\t<FilledBtn>수정</FilledBtn>\r\n\t\t\t\t</ButtonRow>\r\n\t\t\t</StyledForm>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default EditForm;\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Wrapper = styled.section`\r\n\twidth: 1200px;\r\n\tpadding: 40px 100px;\r\n\tmargin: 0 auto;\r\n\tborder: 1.5px solid #c4c4c4;\r\n\tborder-radius: 5px;\r\n\r\n\t${customMedia.lessThan(\"mobile\")`\r\n    width: 295px;\r\n    padding: 3px;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 363px;\r\n    padding: 5px;\r\n  `}\r\n\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 610px;\r\n    padding: 10px 20px;\r\n  `}\r\n\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 880px;\r\n    padding: 20px 50px;\r\n  `}\r\n`;\r\n\r\nconst StyledForm = styled(Form)`\r\n\r\n\t.ant-form-item-label > label {\r\n\t\tfont-size: 18px;\r\n    font-weight: bold;\r\n    \r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n    `}\r\n\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 14px;\r\n    `}\r\n\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 16px;\r\n    `}\r\n\t}\r\n\r\n\t.ant-form-item {\r\n    margin-bottom: 14px;\r\n\t}\r\n\r\n\t.ant-input:focus,\r\n\t.ant-input-focused,\r\n\t.ant-input:hover,\r\n\t.ant-input-number:hover,\r\n\t.ant-picker:hover,\r\n\t.ant-picker-focused {\r\n\t\tborder-color: #f98404;\r\n\t\tbox-shadow: none;\r\n\t}\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n\tfont-size: 16px;\r\n\theight: 48px;\r\n\tbackground-color: #f6f6f6;\r\n\tborder: 1px solid #94989b;\r\n  border-radius: 5px;\r\n  \r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n    height: 28px;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n    height: 28px;\r\n  `}\r\n\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 12px;\r\n    height: 32px;\r\n  `}\r\n\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 14px;\r\n    height: 40px;\r\n  `}\r\n`;\r\n\r\nconst StyledInputNumber = styled(InputNumber)`\r\n\tfont-weight: bold;\r\n\tfont-size: 16px;\r\n\twidth: 80px;\r\n\theight: 40px;\r\n\tbackground-color: #f6f6f6;\r\n\tborder: 1px solid #94989b;\r\n\tborder-radius: 5px;\r\n\r\n\t.ant-input-number-input-wrap,\r\n\t.ant-input-number-input {\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n    width: 60px;\r\n    height: 28px;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n    width: 60px;\r\n    height: 28px;\r\n  `}\r\n\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 12px;\r\n    width: 50px;\r\n    height: 25px;\r\n  `}\r\n\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 14px;\r\n    width: 60px;\r\n    height: 30px;\r\n  `}\r\n`;\r\n\r\nconst PersonnelRow = styled.div`\r\n\tdisplay: flex;\r\n\tgap: 1px;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  align-self: center;\r\n  margin: 0 5px;\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n  `}\r\n\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 12px;\r\n  `}\r\n\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 14px;\r\n  `}\r\n`;\r\n\r\nconst TitleRow = styled.div`\r\n\tfont-weight: bold;\r\n\tfont-size: 20px;\r\n  margin: 20px 0;\r\n  \r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 12px;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 12px;\r\n  `}\r\n\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n  `}\r\n\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 16px;\r\n  `}\r\n`;\r\n\r\nconst StyledRangePicker = styled(RangePicker)`\r\n  height: 48px;\r\n  background-color: #f6f6f6;\r\n  border: 1px solid #94989b;\r\n  border-radius: 5px;\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    height: 28px;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    height: 28px;\r\n  `}\r\n  \r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    height: 32px;\r\n  `}\r\n\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    height: 40px;\r\n  `}\r\n    \r\n  .ant-picker-input > input {\r\n    font-size: 16px;\r\n    text-align: center;\r\n    \r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    \r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 12px;\r\n    `}\r\n    \r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 14px;\r\n    `}\r\n  }\r\n    \r\n  .ant-picker-active-bar {\r\n    background: #f98404;\r\n  }\r\n`;\r\n\r\nconst FileInput = styled.div`\r\n  background-color: #f6f6f6;\r\n  border: 1px solid #94989b;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  width: 250px;\r\n  \r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n    padding: 0;\r\n    width: 130px;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n    padding: 0;\r\n    width: 130px;\r\n  `}\r\n\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 12px;\r\n    padding: 3px;\r\n    width: 170px;\r\n  `}\r\n  \r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 14px;\r\n    padding: 5px;\r\n  `}\r\n`;\r\n\r\nconst StyledTextArea = styled(TextArea)`\r\n\tfont-size: 16px;\r\n\twidth: 700px;\r\n\tbackground-color: #f6f6f6;\r\n\tborder: 1px solid #94989b;\r\n\tborder-radius: 5px;\r\n  \r\n\t${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n  `}\r\n  \r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 12px;\r\n  `}\r\n  \r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 14px;\r\n  `}\r\n`;\r\n\r\nconst TagRow = styled(Row)`\r\n\tmargin-top: 20px;\r\n`;\r\n\r\nconst TagTitle = styled.div`\r\n\tfont-weight: bold;\r\n\tfont-size: 20px;\r\n  margin-bottom: 7px; \r\n  \r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 10px;\r\n  `} \r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 10px;\r\n  `}\r\n  \r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n  `} \r\n  \r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 16px;\r\n  `};\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n\tdisplay: flex;\r\n  flex-wrap: wrap;\r\n\tgap: 10px;\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    gap: 2px;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    gap: 3px;\r\n  `}\r\n\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    gap: 5px;\r\n  `}\r\n`;\r\n\r\nconst PreviewImage = styled.img`\r\n\twidth: 260px;\r\n\theight: 260px;\r\n\tborder: none;\r\n\tborder-radius: 50%;\r\n\r\n\t${customMedia.lessThan(\"mobile\")`\r\n    width: 85px;\r\n    height: 85px;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 100px;\r\n    height: 100px;\r\n  `}\r\n\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 120px;\r\n    height: 120px;\r\n  `}\r\n\r\n  ${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 180px;\r\n    height: 180px;\r\n  `}\r\n`;\r\n\r\nconst TrashBtn = styled.div`\r\n\twidth: 24px;\r\n\theight: 24px;\r\n\tcursor: pointer;\r\n\tz-index: 10;\r\n\tposition: absolute;\r\n\ttop: 10%;\r\n  right: 25%;\r\n  \r\n  ${customMedia.lessThan(\"mobile\")`\r\n    width: 10px;\r\n    height: 10px;\r\n    top: 5%;\r\n    right: 15%;\r\n  `}\r\n\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 12px;\r\n    height: 12px;\r\n    top: 5%;\r\n  `}\r\n\r\n  ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 18px;\r\n    height: 18px;\r\n  `}\r\n\r\n\timg {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n`;\r\n\r\nconst ButtonRow = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tmargin: 40px 0;\r\n`;\r\n\r\n// const MapWrapper = styled.div`\r\n// \twidth: 1000px;\r\n// \theight: 250px;\r\n//   margin-top: 40px;\r\n  \r\n// \t${customMedia.lessThan(\"mobile\")`\r\n//     width: 282px;\r\n//     height: 200px;\r\n//   `}\r\n\r\n//   ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n//     width: 350px;\r\n//     height: 200px;\r\n//   `}\r\n\r\n//   ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n//     width: 567px;\r\n//   `}\r\n\r\n//   ${customMedia.between(\"tablet\", \"desktop\")`\r\n//     width: 777px;\r\n//   `}\r\n// `;\r\n\r\nconst FilledBtn = styled(Button)`\r\n\t& {\r\n\t\tcolor: #ffffff;\r\n\t\tbackground-color: #ff6701;\r\n\t\tborder: none;\r\n\t\tborder-radius: 6px;\r\n    outline: none;\r\n    \r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 10px;\r\n    `}\r\n\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 12px;\r\n    `}\r\n\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 16px;\r\n    `}\r\n\t}\r\n`;\r\n\r\nconst SkeletonImg = styled(Skeleton.Image)`\r\n\t.ant-skeleton-image {\r\n\t\twidth: 260px;\r\n\t\theight: 260px;\r\n\t\tborder-radius: 50%;\r\n\r\n    ${customMedia.lessThan(\"mobile\")`\r\n      width: 85px;\r\n      height: 85px;\r\n    `}\r\n\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      width: 100px;\r\n      height: 100px;\r\n    `}\r\n\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      width: 120px;\r\n      height: 120px;\r\n    `}\r\n\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      width: 180px;\r\n      height: 180px;\r\n    `}\r\n\t}\r\n`;","C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\LikedClubCard.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\Member.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\JoinedClubCard.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\myPage\\PendingMember.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\NotFound.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\common\\WaitingTag.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\pages\\Detail.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\pages\\MyPage.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\detail\\Main.jsx",["195"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, message } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { customMedia } from \"../../GlobalStyles\";\r\nimport InfoBox from \"./InfoBox\";\r\nimport DetailInfo from \"./DetailInfo\";\r\nimport Comment from \"./Comment\";\r\nimport Button from \"../common/Button\";\r\nimport Spin from \"../common/Spin\";\r\nimport Pagination from \"../common/Pagination\";\r\nimport profile from \"../../images/icons/profile.png\";\r\n\r\nconst url = \"http://modgo.loca.lt\";\r\n\r\nconst Main = (props) => {\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst [club, setClub] = useState();\r\n\tconst [comments, setComments] = useState();\r\n\tconst [postComment, setPostComment] = useState(\"\");\r\n\tconst [updateComment, setUpdateComment] = useState(\"\");\r\n\tconst [editable, setEditable] = useState();\r\n\tconst [total, setTotal] = useState(0);\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [likedClubs, setLikedClubs] = useState([]);\r\n\tconst [apply, setApply] = useState();\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst clubId = Number(props.match.params.id);\r\n\tconst userId = localStorage.getItem(\"user_id\");\r\n\tconst userImg = localStorage.getItem(\"user_image\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await axios.get(url+`/clubs/${clubId}`);\r\n\r\n\t\t\t\tsetClub(res.data);\r\n\r\n\t\t\t\tif (userId) {\r\n\t\t\t\t\tconst likedClubRes = await axios.get(url+\"/likedClubs/ids\", {\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tuserId: userId,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsetLikedClubs(likedClubRes.data.likedClubIdList);\r\n\r\n\t\t\t\t\tconst applyRes = await axios.get(\"/members/ids\", {\r\n\t\t\t\t\t\tparams: { userId: userId },\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsetApply(applyRes.data.joiningClubIdList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t};\r\n\t\tfetchData();\r\n\t\tfetchCmtData();\r\n\t}, [userImg, total, page]);\r\n\r\n\tconst fetchCmtData = async () => {\r\n\t\tconst res = await axios.get(`/comments/clubs/${clubId}`, {\r\n\t\t\tparams: { page: page },\r\n\t\t});\r\n\r\n\t\tsetComments(res.data.commentList);\r\n\t\tsetTotal(res.data.totalCount);\r\n\t};\r\n\r\n\tconst showModal = () => {\r\n\t\tsetIsModalVisible(true);\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalVisible(false);\r\n\t};\r\n\r\n\tconst handlePostComment = async () => {\r\n\t\tconst data = {\r\n\t\t\tuserId: userId,\r\n\t\t\tclubId: Number(clubId),\r\n\t\t\tcontents: postComment,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(\"/comments\", data);\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tmessage.success(\"댓글이 성공적으로 등록되었습니다.\");\r\n\t\t\t} else {\r\n\t\t\t\tmessage.error(\"댓글 등록에 실패했습니다.\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t} finally {\r\n\t\t\tfetchCmtData();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUpdateComment = async (id) => {\r\n\t\tconst data = {\r\n\t\t\tuserId: userId,\r\n\t\t\tcontents: updateComment,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await axios.put(`/comments/${id}`, data);\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tmessage.success(\"댓글이 성공적으로 수정되었습니다.\");\r\n\t\t\t} else {\r\n\t\t\t\tmessage.error(\"댓글 수정에 실패했습니다.\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t} finally {\r\n\t\t\tfetchCmtData();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDeleteComment = async (id) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.delete(`/comments/${id}`);\r\n\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tmessage.success(\"댓글이 성공적으로 삭제되었습니다.\");\r\n\t\t\t} else {\r\n\t\t\t\tmessage.error(\"댓글 삭제에 실패했습니다.\");\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t} finally {\r\n\t\t\tfetchCmtData();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleLikedClubs = (clubId) => {\r\n\t\tlet index = likedClubs.indexOf(clubId);\r\n\r\n\t\ttry {\r\n\t\t\tif (likedClubs.includes(clubId)) {\r\n\t\t\t\tlikedClubs.splice(index, 1);\r\n\t\t\t\tsetLikedClubs([...likedClubs]);\r\n\t\t\t\thandleLikeDelete(clubId);\r\n\t\t\t} else {\r\n\t\t\t\tsetLikedClubs([...likedClubs, clubId]);\r\n\t\t\t\thandleLikePost(clubId);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleLikePost = async (clubId) => {\r\n\t\tconst data = {\r\n\t\t\tclubId: Number(clubId),\r\n\t\t\tuserId: userId,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tawait axios.post(\"/likedClubs\", data);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleLikeDelete = async (clubId) => {\r\n\t\ttry {\r\n\t\t\tawait axios.delete(\"/likedClubs\", {\r\n\t\t\t\tparams: { userId: userId, clubId: Number(clubId) },\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onReset = () => {\r\n\t\tsetPostComment(\"\");\r\n\t};\r\n\r\n\tconst handlePostApply = async (id) => {\r\n\t\ttry {\r\n\t\t\tconst data = { userId: userId, clubId: Number(id) };\r\n\t\t\tconst res = await axios.post(\"/members\", data);\r\n\t\t\tif (res.status === 400) {\r\n\t\t\t\tmessage.error(\"이미 참여신청한 모임입니다.\");\r\n\t\t\t}\r\n\t\t\tsetApply([...apply, id]);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDeleteApply = async (clubId) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.delete(\"/members\", {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tuserId: userId,\r\n\t\t\t\t\tclubId: Number(clubId),\r\n\t\t\t\t\tdelete: \"\",\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tif (res.status === 400) {\r\n\t\t\t\tmessage.error(\"이미 참여취소한 모임입니다.\");\r\n\t\t\t}\r\n\r\n\t\t\tconst index = apply.indexOf(clubId);\r\n\t\t\tapply.splice(index, 1);\r\n\t\t\tsetApply([...apply]);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<SpinContainer>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</SpinContainer>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<InfoBox\r\n\t\t\t\t\t\tuserId={userId}\r\n\t\t\t\t\t\tclub={club}\r\n\t\t\t\t\t\tlikedClubs={likedClubs}\r\n\t\t\t\t\t\thandleLikedClubs={handleLikedClubs}\r\n\t\t\t\t\t\tapply={apply}\r\n\t\t\t\t\t\thandlePostApply={handlePostApply}\r\n\t\t\t\t\t\thandleDeleteApply={handleDeleteApply}\r\n\t\t\t\t\t\tisModalVisible={isModalVisible}\r\n\t\t\t\t\t\tshowModal={showModal}\r\n\t\t\t\t\t\thandleCancel={handleCancel}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<DetailInfo club={club} />\r\n\t\t\t\t\t<TitleRow>\r\n\t\t\t\t\t\t<Title>댓글 ({total})</Title>\r\n\t\t\t\t\t</TitleRow>\r\n\t\t\t\t\t<CmtContainer>\r\n\t\t\t\t\t\t<InputBox>\r\n\t\t\t\t\t\t\t<ProfileIcon>\r\n\t\t\t\t\t\t\t\t{userImg ? (\r\n\t\t\t\t\t\t\t\t\t<img src={userImg} alt=\"User profile\" />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<img src={profile} alt=\"User profile icon\" />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</ProfileIcon>\r\n\t\t\t\t\t\t\t<StyledInput\r\n\t\t\t\t\t\t\t\tvalue={postComment}\r\n\t\t\t\t\t\t\t\tplaceholder=\"댓글을 입력하세요...\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetPostComment(e.target.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<CmtPost\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tif (userId) {\r\n\t\t\t\t\t\t\t\t\t\thandlePostComment();\r\n\t\t\t\t\t\t\t\t\t\tonReset();\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tmessage.warning(\"로그인이 필요한 기능입니다.\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t등록\r\n\t\t\t\t\t\t\t</CmtPost>\r\n\t\t\t\t\t\t</InputBox>\r\n\t\t\t\t\t\t<ListRow>\r\n\t\t\t\t\t\t\t{comments\r\n\t\t\t\t\t\t\t\t? comments.map((comment) => (\r\n\t\t\t\t\t\t\t\t\t\t<Comment\r\n\t\t\t\t\t\t\t\t\t\t\tkey={comment.id}\r\n\t\t\t\t\t\t\t\t\t\t\tcomment={comment}\r\n\t\t\t\t\t\t\t\t\t\t\tuserId={userId}\r\n\t\t\t\t\t\t\t\t\t\t\tsetUpdateComment={setUpdateComment}\r\n\t\t\t\t\t\t\t\t\t\t\teditable={editable}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEditable={setEditable}\r\n\t\t\t\t\t\t\t\t\t\t\thandleUpdateComment={handleUpdateComment}\r\n\t\t\t\t\t\t\t\t\t\t\thandleDeleteComment={handleDeleteComment}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t\t: \"\"}\r\n\t\t\t\t\t\t</ListRow>\r\n\t\t\t\t\t</CmtContainer>\r\n\t\t\t\t\t<PaginationRow>\r\n\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\ttotal={total}\r\n\t\t\t\t\t\t\tpageSize={5}\r\n\t\t\t\t\t\t\tcurrent={page}\r\n\t\t\t\t\t\t\tonChange={(page) => setPage(page)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</PaginationRow>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n\r\nconst Wrapper = styled.section`\r\n\twidth: 996px;\r\n  margin: 60px auto;\r\n  flex: 1;\r\n  padding-bottom: 60px;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    width: 295px;\r\n    margin: 40px auto;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 363px;\r\n    margin: 40px auto;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 610px;\r\n    margin: 40px auto;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 880px;\r\n  `}\r\n`;\r\n\r\nconst TitleRow = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\ttext-align: center;\r\n\tmargin-bottom: 15px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n\tfont-weight: 500;\r\n\tfont-size: 24px;\r\n  margin-top: 50px;\r\n  \r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 16px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 16px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 18px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 20px;\r\n  `}\r\n`;\r\n\r\nconst CmtContainer = styled.div`\r\n\twidth: 100%;\r\n`;\r\n\r\nconst InputBox = styled.div`\r\n\twidth: 840px;\r\n\tborder: 1px solid #c4c4c4;\r\n\tborder-radius: 10px;\r\n\tmargin: 0 auto;\r\n\tpadding: 10px;\r\n  display: flex;\r\n  \r\n  ${customMedia.lessThan(\"mobile\")`\r\n    width: 295px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 321px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 528px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 724px;\r\n  `}\r\n`;\r\n\r\nconst ProfileIcon = styled.div`\r\n\twidth: 48px;\r\n\theight: 48px;\r\n\tmargin-right: 10px;\r\n\timg {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n  }\r\n  \r\n  ${customMedia.lessThan(\"mobile\")`\r\n    width: 28px;\r\n    height: 28px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 28px;\r\n    height: 28px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 32px;\r\n    height: 32px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 40px;\r\n    height: 40px;\r\n  `}\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n\tborder: none;\r\n\toutline: none;\r\n\tfont-size: 20px;\r\n  flex: 2;\r\n  \r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 14px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 14px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 16px;\r\n  `}\r\n`;\r\n\r\nconst CmtPost = styled(Button)`\r\n  flex: 0.2;\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    flex: 0.3;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    flex: 0.3;\r\n  `}\r\n  \r\n\t& {\r\n\t\tfont-size: 16px;\r\n\t\tcolor: #ffffff;\r\n\t\tbackground-color: #ff6701;\r\n\t\tpadding: 0;\r\n    border-radius: 5px;\r\n    \r\n    ${customMedia.lessThan(\"mobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n      font-size: 10px;\r\n    `}\r\n    ${customMedia.between(\"largeMobile\", \"tablet\")`\r\n      font-size: 12px;\r\n    `}\r\n    ${customMedia.between(\"tablet\", \"desktop\")`\r\n      font-size: 14px;\r\n    `}\r\n\t}\r\n`;\r\n\r\nconst ListRow = styled.div`\r\n\twidth: 100%;\r\n\tmargin: 20px 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\tgap: 20px;\r\n`;\r\n\r\nconst PaginationRow = styled(Row)`\r\n\twidth: 100%;\r\n\tmargin-top: 48px;\r\n\tjustify-content: center;\r\n\t${customMedia.lessThan(\"mobile\")`\r\n    margin-top: 24px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    margin-top: 24px;\r\n  `}\r\n\t${customMedia.between(\"mobile\", \"tablet\")`\r\n    margin-top: 24px;\r\n  `}\r\n`;\r\n\r\nconst SpinContainer = styled.div`\r\n\twidth: 100%;\r\n\theight: 80vh;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n  align-items: center;\r\n  \r\n  ${customMedia.lessThan(\"mobile\")`\r\n    margin-top: 45px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    margin-top: 45px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    margin-top: 45px;\r\n  `}\r\n`;","C:\\Users\\USER\\moDgo\\front\\src\\components\\detail\\DetailInfo.jsx",["196"],"import React from \"react\";\r\nimport { Divider } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { customMedia } from \"../../GlobalStyles\";\r\n\r\n\r\nconst DetailInfo = ({ ...props }) => {\r\n  return (\r\n    <DetailInfoContainer>\r\n      <Title>상세 설명</Title>\r\n      <TextBox>\r\n        <SubTitle>{props.club.contents}</SubTitle>\r\n        <Contents>{props.club.description}</Contents>\r\n      </TextBox>\r\n      <Divider />\r\n      <Title>모임</Title>\r\n      <TextBox>\r\n        <SubTitle>\r\n          {props.club.bookTitle}, {props.club.author},{\" \"}\r\n          {props.club.publisher === \"undefined\"\r\n            ? \"미입력\"\r\n            : props.club.publisher}\r\n          , {props.club.publishedAt !== 0 ? props.club.publishedAt : \"미입력\"}{\" \"}\r\n        </SubTitle>\r\n        <Contents>{props.club.bookDescription}</Contents>\r\n      </TextBox>\r\n      <Divider />\r\n      <Title>모임 장소</Title>\r\n      <TextBox>\r\n        <SubTitle>\r\n          {props.club.addressStreet !== \"undefined\"\r\n            ? props.club.addressStreet\r\n            : \"\"}{\" \"}\r\n          {props.club.addressDetail !== \"undefined\"\r\n            ? props.club.addressDetail\r\n            : \"\"}\r\n        </SubTitle>\r\n      </TextBox>\r\n    </DetailInfoContainer>\r\n  );\r\n\r\n};\r\n\r\nexport default DetailInfo;\r\n\r\nconst DetailInfoContainer = styled.div`\r\n\r\n  margin: 60px 0;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 30px;\r\n\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 18px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 18px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 20px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 22px;\r\n  `}\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  margin-bottom: 15px;\r\n\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 16px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 16px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 18px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 18px;\r\n  `}\r\n`;\r\n\r\nconst Contents = styled.div`\r\n\r\n  font-size: 16px;\r\n  white-space: pre-wrap;\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    font-size: 14px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    font-size: 14px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    font-size: 14px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    font-size: 14px;\r\n  `}\r\n`;\r\n\r\nconst TextBox = styled.div`\r\n\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst MapWrapper = styled.div`\r\n  width: 996px;\r\n  height: 250px;\r\n\r\n\r\n  ${customMedia.lessThan(\"mobile\")`\r\n    width: 295px;\r\n  `}\r\n  ${customMedia.between(\"mobile\", \"largeMobile\")`\r\n    width: 363px;\r\n  `}\r\n\t${customMedia.between(\"largeMobile\", \"tablet\")`\r\n    width: 610px;\r\n  `}\r\n\t${customMedia.between(\"tablet\", \"desktop\")`\r\n    width: 880px;\r\n  `}\r\n\r\n`;\r\n\r\n","C:\\Users\\USER\\moDgo\\front\\src\\components\\detail\\InfoBox.jsx",[],"C:\\Users\\USER\\moDgo\\front\\src\\components\\detail\\Comment.jsx",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":33,"column":6,"nodeType":"203","endLine":33,"endColumn":63,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":3,"column":18,"nodeType":"207","messageId":"208","endLine":3,"endColumn":22},{"ruleId":"205","severity":1,"message":"209","line":16,"column":10,"nodeType":"207","messageId":"208","endLine":16,"endColumn":30},{"ruleId":"205","severity":1,"message":"210","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"211","line":28,"column":10,"nodeType":"207","messageId":"208","endLine":28,"endColumn":19},{"ruleId":"205","severity":1,"message":"212","line":37,"column":9,"nodeType":"207","messageId":"208","endLine":37,"endColumn":12},{"ruleId":"205","severity":1,"message":"213","line":38,"column":9,"nodeType":"207","messageId":"208","endLine":38,"endColumn":17},{"ruleId":"205","severity":1,"message":"214","line":130,"column":13,"nodeType":"207","messageId":"208","endLine":130,"endColumn":16},{"ruleId":"205","severity":1,"message":"215","line":274,"column":9,"nodeType":"207","messageId":"208","endLine":274,"endColumn":17},{"ruleId":"205","severity":1,"message":"216","line":410,"column":7,"nodeType":"207","messageId":"208","endLine":410,"endColumn":15},{"ruleId":"205","severity":1,"message":"217","line":702,"column":7,"nodeType":"207","messageId":"208","endLine":702,"endColumn":18},{"ruleId":"205","severity":1,"message":"218","line":724,"column":7,"nodeType":"207","messageId":"208","endLine":724,"endColumn":18},{"ruleId":"205","severity":1,"message":"219","line":24,"column":10,"nodeType":"207","messageId":"208","endLine":24,"endColumn":24},{"ruleId":"205","severity":1,"message":"220","line":45,"column":9,"nodeType":"207","messageId":"208","endLine":45,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":49,"column":6,"nodeType":"203","endLine":56,"endColumn":4,"suggestions":"221"},{"ruleId":"205","severity":1,"message":"222","line":136,"column":9,"nodeType":"207","messageId":"208","endLine":136,"endColumn":18},{"ruleId":"205","severity":1,"message":"223","line":140,"column":9,"nodeType":"207","messageId":"208","endLine":140,"endColumn":21},{"ruleId":"205","severity":1,"message":"224","line":546,"column":7,"nodeType":"207","messageId":"208","endLine":546,"endColumn":16},{"ruleId":"205","severity":1,"message":"225","line":582,"column":7,"nodeType":"207","messageId":"208","endLine":582,"endColumn":14},{"ruleId":"205","severity":1,"message":"226","line":590,"column":7,"nodeType":"207","messageId":"208","endLine":590,"endColumn":25},{"ruleId":"205","severity":1,"message":"227","line":615,"column":7,"nodeType":"207","messageId":"208","endLine":615,"endColumn":16},{"ruleId":"205","severity":1,"message":"218","line":646,"column":7,"nodeType":"207","messageId":"208","endLine":646,"endColumn":18},{"ruleId":"205","severity":1,"message":"228","line":688,"column":7,"nodeType":"207","messageId":"208","endLine":688,"endColumn":17},{"ruleId":"205","severity":1,"message":"229","line":706,"column":7,"nodeType":"207","messageId":"208","endLine":706,"endColumn":16},{"ruleId":"205","severity":1,"message":"230","line":723,"column":7,"nodeType":"207","messageId":"208","endLine":723,"endColumn":16},{"ruleId":"205","severity":1,"message":"231","line":747,"column":7,"nodeType":"207","messageId":"208","endLine":747,"endColumn":18},{"ruleId":"205","severity":1,"message":"232","line":40,"column":8,"nodeType":"207","messageId":"208","endLine":40,"endColumn":19},{"ruleId":"205","severity":1,"message":"213","line":54,"column":8,"nodeType":"207","messageId":"208","endLine":54,"endColumn":16},{"ruleId":"205","severity":1,"message":"233","line":68,"column":8,"nodeType":"207","messageId":"208","endLine":68,"endColumn":21},{"ruleId":"201","severity":1,"message":"234","line":62,"column":5,"nodeType":"203","endLine":62,"endColumn":27,"suggestions":"235"},{"ruleId":"205","severity":1,"message":"236","line":116,"column":7,"nodeType":"207","messageId":"208","endLine":116,"endColumn":17},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["239"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'sortByCreatedAtClubs' is assigned a value but never used.","'Link' is defined but never used.","'inputText' is assigned a value but never used.","'ref' is assigned a value but never used.","'onChange' is assigned a value but never used.","'res' is assigned a value but never used.","'TextArea' is assigned a value but never used.","'TitleRow' is assigned a value but never used.","'NavRegister' is assigned a value but never used.","'StyledModal' is assigned a value but never used.","'isModalVisible' is assigned a value but never used.","'history' is assigned a value but never used.",["240"],"'showModal' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'LargeText' is assigned a value but never used.","'TextBox' is assigned a value but never used.","'DeleteBtnContainer' is assigned a value but never used.","'DeleteBtn' is assigned a value but never used.","'ModalTitle' is assigned a value but never used.","'ButtonRow' is assigned a value but never used.","'FilledBtn' is assigned a value but never used.","'UnfilledBtn' is assigned a value but never used.","'fullAddress' is assigned a value but never used.","'getFullAdress' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clubId', 'fetchCmtData', and 'userId'. Either include them or remove the dependency array.",["241"],"'MapWrapper' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [clubStatus, page, keyword, selectedTags, sortBy, userId, fetchData]",{"range":"248","text":"249"},"Update the dependencies array to be: [myMembersPage, myPendingMembersPage, myJoinedClubsPage, myLikedClubsTotal, myLikedClubsPage, fetchData]",{"range":"250","text":"251"},"Update the dependencies array to be: [userImg, total, page, fetchCmtData, clubId, userId]",{"range":"252","text":"253"},[1136,1193],"[clubStatus, page, keyword, selectedTags, sortBy, userId, fetchData]",[2050,2198],"[myMembersPage, myPendingMembersPage, myJoinedClubsPage, myLikedClubsTotal, myLikedClubsPage, fetchData]",[1884,1906],"[userImg, total, page, fetchCmtData, clubId, userId]"]